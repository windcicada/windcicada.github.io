[{"categories":["工作日志"],"content":" Ascend及算子开发知识整理 ","date":"2024-07-11","objectID":"/huaweishengteng/:0:0","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"昇腾计算产业生态 昇腾计算软硬件体系: 应用层: 包括ModelArts、HiAI Service、Mindx等平台。 框架层: 包括MindSpore、TensorFlow、PyTorch等。 计算架构层: 异算计算架构CANN和NPU驱动。 硬件层: 系列硬件和昇腾系列处理器。 合作伙伴: IHV（独立硬件供应商） 高校: 教学科研、算子众筹。 开发者: 算子贡献、开源贡献。 ISV（独立软件供应商） OEM/ODM: 产品销售、开源开放。 行业应用: ​ 广泛应用于医疗、运营商、能源、交通、互联网、制造、金融、机器人等领域。 ​ 昇腾计算产业以“硬件开放，软件开源，使能合作伙伴”的开放生态，推动发展。聚焦计算架构、处理器和基础软件的创新与研发，通过自有硬件和伙伴硬件相结合的方式为客户提供多样化的算力选择。昇腾计算产业发展致力于将AI新技术的红利带到世界的每个角落，让人人充分享受AI带来的美好。在AI治理上，华为与生态、商业伙伴共同倡导向善、包容、普惠和负责任的AI， 为人类社会发展带来价值。 ","date":"2024-07-11","objectID":"/huaweishengteng/:1:0","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"Orange Pi AI Pro Orange Pi AI Pro是由香橙派与华为联合打造的一款高性能AI开发板，搭载了华为昇腾（Ascend）AI处理器，具备强大的计算能力和丰富的接口，适用于多种AI应用场景。 主要特点 处理器： 搭载华为Ascend 310B AI处理器，提供高达8 TOPS INT8的计算能力，适用于图像和视频分析、推理计算等任务。 内存： 提供8GB和16GB LPDDR4X-3200内存版本。 存储： 支持M.2 2280插槽，可扩展SATA/NVMe SSD。 提供eMMC 5.1存储选项，容量从32GB到256GB不等。 具有TF卡插槽。 连接性： 支持Wi-Fi 5和Bluetooth 4.2。 千兆以太网接口。 视频输出： 两个HDMI 2.0接口，支持4K@60FPS输出。 一个MIPI DSI接口。 摄像头接口： 两个MIPI摄像头接口，兼容Raspberry Pi Camera模块。 其他接口： 两个USB 3.0 Type-A接口。 一个USB 3.0 Type-C接口。 一个USB Type-C 20V电源接口。 40针GPIO接口，支持GPIO、UART、I2C、SPI、I2S、PWM等。 操作系统支持： 支持Ubuntu和openEuler操作系统。 应用场景 教育：为学生和研究人员提供一个高性能的AI开发平台。 机器人：支持复杂的图像和视频处理，适用于自动导航和环境感知。 无人机：提供强大的计算能力，支持实时图像处理和飞行控制。 开发板规格 尺寸：107 x 68 mm。 提供丰富的外围接口，增强开发板的扩展性和适用性。 ","date":"2024-07-11","objectID":"/huaweishengteng/:2:0","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"什么是算子 计算逻辑: 对应网络中层或节点的计算逻辑。 数学含义: 一个函数空间到另一个函数空间的映射。 常见举例: tanh、ReLu、sigmoid等。 ","date":"2024-07-11","objectID":"/huaweishengteng/:3:0","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"算子基本概念 算子名称: 用于标志网络中的某个算子。 算子类型: 根据算子类型实现算子的具体匹配。 数据容器: Tensor: 存储算子输入输出数据的容器，包含name、shape、dtype和format等属性。 属性: 如axis表示张量的维度。 ","date":"2024-07-11","objectID":"/huaweishengteng/:3:1","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"Ascend C算子 Ascend C算子采用标准C++语法和一组类库API进行编程，方便根据需求选择合适的API开发自定义算子。Ascend C算子用于高性能矩阵计算，特别适合AI运算中的矩阵计算任务。 ","date":"2024-07-11","objectID":"/huaweishengteng/:4:0","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"术语解释 4核CPU: 负责逻辑控制。 NPU: 专用于计算任务。 HBM类显存: 高带宽存储器，提供快速数据访问。 标量逻辑控制: 控制单一数据的运算。 AICPU算子开发: 在AI处理器上进行算子开发。 向量矩阵计算: Ascend C支持高效的向量和矩阵运算。 CANN: 使能并行加速和高效开发的框架，融合了GPU和NPU的优势，提供高效的自研算子。 ","date":"2024-07-11","objectID":"/huaweishengteng/:4:1","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"CANN优化手段 数据优化: 数据融合、流水线处理和GE（Graph Engine）。 计算优化: 动态Shape支持、Transformer加速库、深度融合算子。 通讯优化: 数据搬移（HCCL），整图下沉，自适应梯度切分。 模型瘦身: 通过AMCT工具进行模型压缩。 图像预处理: 使用DVPP进行图像裁剪和归一化处理。 ","date":"2024-07-11","objectID":"/huaweishengteng/:4:2","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"编程模型：SPMD模型 Ascend C算子编程采用SPMD（Single-Program Multiple-Data）编程模型。SPMD是一种常用的并行计算方法，是提高计算速度的有效手段。 SPMD简介 在SPMD模型中，从输入数据到输出数据通常需要经过多个阶段的任务处理（例如，T1、T2、T3）。SPMD会启动一组进程，并行处理待处理的数据。具体来说，待处理的数据被切分成多个分片，然后分发给不同的进程，每个进程对自己的数据分片依次进行各个任务的处理。 Ascend C中的SPMD应用 在Ascend C编程模型中，待处理的数据被拆分并同时在多个计算核心（类似于多个进程）上运行，从而实现更高的性能。多个AI Core共享相同的指令代码，每个核上的运行实例唯一的区别是block_idx不同，每个核通过不同的block_idx来识别自己的身份。block的概念类似于进程，而block_idx则类似于进程ID。下面是并行计算过程的示意图： ","date":"2024-07-11","objectID":"/huaweishengteng/:4:3","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"Ascend算子的优势 编程语言: 使用C/C++语言。 屏蔽硬件差异: 编程模型屏蔽硬件差异。 类库API封装: 提供封装好的类库API。 孪生调试: 可以在CPU侧模拟NPU侧行为。 ","date":"2024-07-11","objectID":"/huaweishengteng/:4:4","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"Ascend C算子开发流程 掌握Ascend C算子的核函数开发流程。 进行简单算子的分析及核函数开发。 示例: 使用矢量计算接口进行算子开发，通常分为CopyIn、Compute和CopyOut三步。 ","date":"2024-07-11","objectID":"/huaweishengteng/:4:5","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"核函数示例 下面的代码片段取自于Ascend C Add算子的实现代码。算子被调用时，所有的计算核心都执行相同的实现代码，入口函数的入参也是相同的。每个核上处理的数据地址需要在起始地址上增加GetBlockIdx() * BLOCK_LENGTH（每个block处理的数据长度）的偏移来获取。这样实现了多核并行计算的数据切分。 class KernelAdd { public: __aicore__ inline KernelAdd() {} __aicore__ inline void Init(GM_ADDR x, GM_ADDR y, GM_ADDR z) { // 获取当前核的起始索引，实现核心并行 xGm.SetGlobalBuffer((__gm__ half*)x + BLOCK_LENGTH * GetBlockIdx(), BLOCK_LENGTH); yGm.SetGlobalBuffer((__gm__ half*)y + BLOCK_LENGTH * GetBlockIdx(), BLOCK_LENGTH); zGm.SetGlobalBuffer((__gm__ half*)z + BLOCK_LENGTH * GetBlockIdx(), BLOCK_LENGTH); // 初始化队列内存，单位为字节 pipe.InitBuffer(inQueueX, BUFFER_NUM, TILE_LENGTH * sizeof(half)); pipe.InitBuffer(inQueueY, BUFFER_NUM, TILE_LENGTH * sizeof(half)); pipe.InitBuffer(outQueueZ, BUFFER_NUM, TILE_LENGTH * sizeof(half)); } // 其他成员函数 ... }; // 实现核函数 extern \"C\" __global__ __aicore__ void add_custom(GM_ADDR x, GM_ADDR y, GM_ADDR z) { // 初始化算子类，算子类提供算子初始化和核心处理等方法 KernelAdd op; // 初始化函数，获取该核函数需要处理的输入输出地址，同时完成必要的内存初始化工作 op.Init(x, y, z); // 核心处理函数，完成算子的数据搬运与计算等核心逻辑 op.Process(); } 在上述代码中，每个计算核心都执行相同的add_custom函数，但由于GetBlockIdx()的不同，每个核心处理的数据片段也不同。这种方式实现了数据的并行处理，从而提高了计算效率。 ","date":"2024-07-11","objectID":"/huaweishengteng/:4:6","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"调用核函数 kernel_name\u003c\u003c\u003cblockDim,12ctrl,stream\u003e\u003e\u003e(argument list); blockDim: 表示在几个核上运行。 12ctrl: 保留参数，暂设为固定值null。 stream: 任务管理。 ","date":"2024-07-11","objectID":"/huaweishengteng/:4:7","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"算子开发示例：Sinh算子 ","date":"2024-07-11","objectID":"/huaweishengteng/:5:0","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"Sinh算子开发流程 ","date":"2024-07-11","objectID":"/huaweishengteng/:5:1","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"Sinh算子功能 cpp 复制代码 sinh(x) = (exp(x) - exp(-x)) / 2.0 ​ 仅处理一个输入，获取一个输出，并且没有任何属性。可参考samples仓中的AddCustom实现进行部分修改即可或者使用msopgen工具生成算子工程文件。 ","date":"2024-07-11","objectID":"/huaweishengteng/:5:2","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"算子实现流程 生成算子工程: /usr/local/Ascend/ascend-toolkit/latest/python/site-packages/bin/msopgen gen -i SinhCustom.json -c ai_core-Ascend310B -lan cpp -out Sinh 修改配置文件: 修改文件CMakePresets.json编译配置项中的ASCEND_CANN_PACKAGE_PATH为/usr/local/Ascend/ascend-toolkit/latest。 \"ASCEND_CANN_PACKAGE_PATH\": { \"type\": \"PATH\", \"value\": \"/usr/local/Ascend/ascend-toolkit/latest\" } 算子实现代码: op_host/sinh_custom_tiling.h #include \"register/tilingdata_base.h\" namespace optiling { BEGIN_TILING_DATA_DEF(SinhCustomTilingData) TILING_DATA_FIELD_DEF(uint32_t, totalLength); TILING_DATA_FIELD_DEF(uint32_t, tileNum); END_TILING_DATA_DEF; REGISTER_TILING_DATA_CLASS(SinhCustom, SinhCustomTilingData) } op_host/sinh_custom.cpp #include \"sinh_custom_tiling.h\" #include \"register/op_def_registry.h\" namespace optiling { const uint32_t BLOCK_DIM = 8; const uint32_t TILE_NUM = 8; static ge::graphStatus TilingFunc(gert::TilingContext* context) { SinhCustomTilingData tiling; uint32_t totalLength = context-\u003eGetInputTensor(0)-\u003eGetShapeSize(); context-\u003eSetBlockDim(BLOCK_DIM); tiling.set_totalLength(totalLength); tiling.set_tileNum(TILE_NUM); tiling.SaveToBuffer(context-\u003eGetRawTilingData()-\u003eGetData(), context-\u003eGetRawTilingData()-\u003eGetCapacity()); context-\u003eGetRawTilingData()-\u003eSetDataSize(tiling.GetDataSize()); size_t *currentWorkspace = context-\u003eGetWorkspaceSizes(1); currentWorkspace[0] = 0; return ge::GRAPH_SUCCESS; } } namespace ge { static ge::graphStatus InferShape(gert::InferShapeContext* context) { const gert::Shape* x1_shape = context-\u003eGetInputShape(0); gert::Shape* y_shape = context-\u003eGetOutputShape(0); *y_shape = *x1_shape; return GRAPH_SUCCESS; } } namespace ops { class SinhCustom : public OpDef { public: explicit SinhCustom(const char* name) : OpDef(name) { this-\u003eInput(\"x\") .ParamType(REQUIRED) .DataType({ge::DT_FLOAT16}) .Format({ge::FORMAT_ND}) .UnknownShapeFormat({ge::FORMAT_ND}); this-\u003eOutput(\"y\") .ParamType(REQUIRED) .DataType({ge::DT_FLOAT16}) .Format({ge::FORMAT_ND}) .UnknownShapeFormat({ge::FORMAT_ND}); this-\u003eSetInferShape(ge::InferShape); this-\u003eAICore() .SetTiling(optiling::TilingFunc); this-\u003eAICore().AddConfig(\"ascend310b\"); } }; OP_ADD(SinhCustom); } op_kernel/sinh_custom.cpp #include \"kernel_operator.h\" using namespace AscendC; constexpr int32_t TOTAL_LENGTH = 8 * 2048; // total length of data constexpr int32_t USE_CORE_NUM = 8; // num of core used constexpr int32_t BLOCK_LENGTH = TOTAL_LENGTH / USE_CORE_NUM; // length computed of each core constexpr int32_t TILE_NUM = 8; // split data into 8 tiles for each core constexpr int32_t BUFFER_NUM = 2; // tensor num for each queue constexpr int32_t TILE_LENGTH = BLOCK_LENGTH / TILE_NUM / BUFFER_NUM; // seperate to 2 parts, due to double buffer class KernelSinh { public: __aicore__ inline KernelSinh() {} __aicore__ inline void Init(GM_ADDR x, GM_ADDR y) { // get start index for current core, core parallel xGm.SetGlobalBuffer((__gm__ half*)x + BLOCK_LENGTH * GetBlockIdx(), BLOCK_LENGTH); yGm.SetGlobalBuffer((__gm__ half*)y + BLOCK_LENGTH * GetBlockIdx(), BLOCK_LENGTH); // pipe alloc memory to queue, the unit is Bytes pipe.InitBuffer(inQueueX, BUFFER_NUM, TILE_LENGTH * sizeof(half)); pipe.InitBuffer(outQueueY, BUFFER_NUM, TILE_LENGTH * sizeof(half)); } __aicore__ inline void Process() { constexpr int32_t loopCount = TILE_NUM * BUFFER_NUM; for (int32_t i = 0; i \u003c loopCount; i++) { CopyIn(i); Compute(i); CopyOut(i); } } private: __aicore__ inline void CopyIn(int32_t progress) { // alloc tensor from queue memory LocalTensor\u003chalf\u003e xLocal = inQueueX.AllocTensor\u003chalf\u003e(); // copy progress_th tile from global tensor to local tensor DataCopy(xLocal, xGm[progress * TILE_LENGTH], TILE_LENGTH); // enque input tensors to VECIN queue inQueueX.EnQue(xLocal); } __aicore__ inline void Compute(int32_t progress) { // deque input tensors from VECIN queue LocalTensor\u003chalf\u003e xLocal = inQueueX.DeQue\u003chalf\u003e(); LocalTensor\u003chalf\u003e yLocal = outQueueY.AllocTensor\u003chalf\u003e(); // call Add instr for computation Exp(xLocal,xLocal,TILE_LENGTH); Reciprocal(yLocal,x","date":"2024-07-11","objectID":"/huaweishengteng/:5:3","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"对部署的算子进行测试 bash run.sh ","date":"2024-07-11","objectID":"/huaweishengteng/:5:4","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["工作日志"],"content":"过程注意点 在使用msopgen工具(mindspore op generator)生成算子工程时，soc_version要设置为Ascend310B，而不是Ascend310B4。 bash 复制代码 ${INSTALL_DIR}/python/site-packages/bin/msopgen gen -i sinh.json -c ai_core-Ascend310B -lan cpp -out Sinh 官方文档-msopgen生成自定义算子工程 算子工程不要通过cp复制，需要使用msopgen根据json文件生成。 初始化生成的算子工程，需要修改文件CMakePresets.json编译配置项中的ASCEND_CANN_PACKAGE_PATH为CANN软件包安装后的实际路径。 SinhCustom算子配置文件内容如下: [ { \"op\": \"SinhCustom\", \"language\":\"cpp\", \"input_desc\": [ { \"name\": \"x\", \"param_type\": \"required\", \"format\": [ \"ND\" ], \"type\": [ \"fp16\" ] } ], \"output_desc\": [ { \"name\": \"y\", \"param_type\": \"required\", \"format\": [ \"ND\" ], \"type\": [ \"fp16\" ] } ] } ] ","date":"2024-07-11","objectID":"/huaweishengteng/:5:5","tags":["website"],"title":"Ascend C算子 学习笔记","uri":"/huaweishengteng/"},{"categories":["个人资料"],"content":"期刊\u0026会议论文 [1] Yudong W, Fang W, Jiawei Z, et al. An improved immersed boundary method with local flow pattern reconstruction and its validation[J]. Physics of Fluids, 2024, 36(4). [2] 王煜栋,王方,金捷.多连通域曲线坐标系浸没边界方法及其检验[J/OL].工程力学:1-13[2022-10-31].DOI:10.6052/j.issn.1000-4750.2022.03.0247. [3] 王煜栋,王方,甘甜,金捷.基于曲线坐标系浸没边界方法的折流燃烧室模拟[J/OL].推进技术:1-22[2022-10-31].DOI:10.13675/j.cnki.tjjs.2207026. [4] 王煜栋,王方,周佳伟,金捷.AECSC-IBM航空发动机燃烧室数值模拟软件研发与检验[J].航空动力学报,2022,37(10):2310-2323.DOI:10.13224/j.cnki.jasp.20220216. [5] Fang Wang,Yu-dong Wang,Xiang Gao,Yu-long Ye,Rui Liu,Gao Han,Jie Jin.Exploration on Nonaxisymmetric Flow Phenomenon in a Slinger Injector[J].Journal of the American Helicopter Society,2022,67(3):142-152. [6] 王方,王煜栋,姜胜利,陈军,唐军,徐华胜,李象远,邢竞文,高东硕,金捷.AECSC-JASMIN湍流燃烧仿真软件研发和检验[J].航空学报,2021,42(12):128-140. [7] 王方,韩宇轩,窦力,王煜栋,金捷.详细化学反应机理对预混丙烷钝体熄火模拟影响[J].推进技术,2021,42(10):2295-2305.DOI:10.13675/j.cnki.tjjs.200126. [8] 王方,王煜栋,姜胜利,陈军,唐军,徐华胜,李象远,邢竞文,高东硕,金捷.基于LES-TPDF方法的AECSC-Jasmin数值模拟软件及其测试[C].珠海:中国化学会第32届学术年会,2021.51-I-026. [9] 王方,王煜栋,姜胜利,陈军,唐军,徐华胜,李象远,邢竞文,高东硕,金捷.AECSC-JASMIN湍流燃烧软件算法及其检验[C].沈阳:燃气涡轮发动机仿真技术发展论坛,2020.507-513. [10] 王方,甘甜,王煜栋,金捷.航空发动机燃烧室的数字孪生体系研究[C].北京:2022航空发动机人工智能辅助设计论坛,2022.AEAIC_A013. ","date":"2024-07-01","objectID":"/awards/:1:0","tags":["achievements"],"title":"学术成果","uri":"/awards/"},{"categories":["个人资料"],"content":"软件著作 基于浸没边界方法的航空发动机燃烧室模拟软件(Aero Engine Combustor Simulation Code based on Immersed Boundary Method, AECSC-IBM), 北京航空航天大学(王方,王煜栋,金捷), 登记号: 2021SR1674991. ","date":"2024-07-01","objectID":"/awards/:2:0","tags":["achievements"],"title":"学术成果","uri":"/awards/"},{"categories":["个人资料"],"content":"学位论文 基于LES-TPDF方法化学反应机理对湍流燃烧影响研究 基于 LES-TPDF 两相湍流燃烧模型的浸没边界方法研究 ","date":"2024-07-01","objectID":"/awards/:3:0","tags":["achievements"],"title":"学术成果","uri":"/awards/"},{"categories":["个人资料"],"content":"奖项 ","date":"2024-07-01","objectID":"/awards/:4:0","tags":["achievements"],"title":"学术成果","uri":"/awards/"},{"categories":["个人资料"],"content":"2021~2022年 2021研究生国家奖学金 2022研究生国家奖学金 学业奖学金一等奖 2021优秀研究生 2022优秀团员 2023北京市优秀毕业生 2023中国化学会年会优秀墙报 ","date":"2024-07-01","objectID":"/awards/:4:1","tags":["achievements"],"title":"学术成果","uri":"/awards/"},{"categories":["个人资料"],"content":"2016~2020年 吴大观奖学金一等奖 冯如杯二等奖 学习优秀奖学金 学科竞赛奖学金 泽泰研究中心奖学金 大学生物理竞赛三等奖 周培源力学竞赛三等奖 ","date":"2024-07-01","objectID":"/awards/:4:2","tags":["achievements"],"title":"学术成果","uri":"/awards/"},{"categories":["工作日志"],"content":"北航自动网络认证 ","date":"2022-12-01","objectID":"/gw_buaa/:0:0","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"WINDOWS ","date":"2022-12-01","objectID":"/gw_buaa/:1:0","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"主文件 gw_buaa.py # @file gw_buaa.py # @author Dong # @date 2022-01-25 # @email wangyudong@buaa.edu.cn # @brief This is a python script to login the buaa network. # \"pip install selenium\" is required. # chromedriver.exe(https://chromedriver.chromium.org/downloads) is required. # \"pip install urllib\" maybe required. from selenium import webdriver import urllib.request import urllib.error import time import re def logged_in(): try: urllib.request.urlopen('https://www.baidu.com/', timeout=1) return True except urllib.error.URLError as err: return False if __name__ == '__main__': while True: if not logged_in(): opt=webdriver.ChromeOptions() #opt.add_argument('--headless') driver=webdriver.Chrome(executable_path='C:\\Program Files\\Google\\Chrome\\Application\\chromedriver.exe',chrome_options=opt) driver.get('https://gw.buaa.edu.cn:801/') driver.find_element_by_id('username').send_keys('sy2004511') driver.find_element_by_id('password').send_keys('Password') driver.find_element_by_id('login').click() time.sleep(5) ","date":"2022-12-01","objectID":"/gw_buaa/:1:1","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"使用前配置 安装python及命令行pip安装selenium(pip install selenium)等。 根据Chrome浏览器版本下载chromedriver.exe。 修改gw_buaa.py中第25行的C:\\Program Files\\Google\\Chrome\\Application\\chromedriver.exe路径为存放前一步下载的chromedriver.exe的路径。 修改gw_buaa.py中第27行的用户名sy2004511。 修改gw_buaa.py中第28行的密码Password。 在源文件目录命令行运行python gw_buaa.md，或双击gw_buaa.bat脚本运行。 ","date":"2022-12-01","objectID":"/gw_buaa/:1:2","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"LINUX ","date":"2022-12-01","objectID":"/gw_buaa/:2:0","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"1. 新建system service 建立文件/usr/lib/systemd/system/buaaConnect.service [Unit] Description=BUAA Connect Service After=network.target syslog.target [Service] Type=idle Restart=on-failure RestartSec=5s ExecStart=/etc/connect_loop.sh [Install] WantedBy=multi-user.target ","date":"2022-12-01","objectID":"/gw_buaa/:2:1","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"2. 建立buaaConnect.service的执行目标 建立文件/etc/connect_loop.sh #!/bin/bash #systemctl: 2345 96 14 ######################################################################### # File Name: connect_loop.sh # Author: Dong # mail: wangyudong@buaa.edu.cn # Created Time: 2022年01月17日 星期一 11时48分42秒 ######################################################################### while true do /etc/buaa_connect/try-connect-v2.sh sleep 10 done ","date":"2022-12-01","objectID":"/gw_buaa/:2:2","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"3. 建立单次执行目标 建立文件/etc/buaa_connect/try-connect-v2.sh #!/bin/bash online=$(curl -sS \"https://gw.buaa.edu.cn/cgi-bin/rad_user_info\") grep \"not_online_error\" \u003c\u003c\u003c $online \u003e /dev/null if [[ \"$?\" != \"0\" ]]; then echo online: $(cut -d, -f1 \u003c\u003c\u003c $online) exit 1 fi /etc/buaa_connect/login-v2.sh login ","date":"2022-12-01","objectID":"/gw_buaa/:2:3","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"4. 修改/etc/buaa_connect/account为自己的账户 USERNAME=\"sy2004511\" PASSWORD=\"PASSWORD\" ","date":"2022-12-01","objectID":"/gw_buaa/:3:0","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["工作日志"],"content":"5. 启动服务 $ sudo systemctl enable buaaConnect.service $ sudo systemctl start buaaConnect.service ","date":"2022-12-01","objectID":"/gw_buaa/:4:0","tags":["AECSC","LES","boffin"],"title":"北航自动网络认证","uri":"/gw_buaa/"},{"categories":["website"],"content":"先列个框架有空再写","date":"2022-10-26","objectID":"/firstsum/","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"网站搭建笔记 ","date":"2022-10-26","objectID":"/firstsum/:0:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"使用HUGO搭建网站 1.使用chocolatey安装HUGO HUGO choco install hugo -confirm HUGO-Extended choco install hugo-extended –confirm 2.初始化网站 在网站根目录下hugo new site sitename(其中sitename表示网站名) 3.下载网站主题(以LoveIt为例) cd themes git clone https://github.com/dillonzq/LoveIt.git 4.本地调试 hugo serve ","date":"2022-10-26","objectID":"/firstsum/:1:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"使用Netlify运行网站 登录Netlify并用github授权 Sites-\u003eNew site from Git 选择仓库 Deploy site ","date":"2022-10-26","objectID":"/firstsum/:2:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"使用Apache2运行网站 待补充 ","date":"2022-10-26","objectID":"/firstsum/:3:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"使用git调试和同步 github创建仓库：用户名.github.io 本地网站主文件夹中hugo --theme=LoveIt --baseUrl=\"https://用户名.github.io/\" --buildDrafts以创建public文件夹 本地用户根文件夹/.ssh（例如C:\\Users\\Dong\\.ssh）中创建SSH密钥（例如ssh-keygen -t rsa -C \"wangyudong@buaa.edu.cn\"）,并传到github(设置-Access-SSH and GPG keys) 本地public文件夹中git初始化（用户名以windcicada为例） git init git add . git commit -m \"comments\" git remote add origin git@github.com:windcicada/windcicada.github.io.git git push -u origin master 无权限push时，修改项目目录下的.git/config，url改为https格式，相当于把git端口由22改为443 [remote \"origin\"] url = https://github.com/windcicada/windcicada.github.io.git ","date":"2022-10-26","objectID":"/firstsum/:4:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"loveIt主题模板配置 … ","date":"2022-10-26","objectID":"/firstsum/:5:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"鼠标点击特效配置 … ","date":"2022-10-26","objectID":"/firstsum/:6:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"Live2D配置 配置./layouts/partials/assets.html 文件末尾207行起： {{- /* 添加live2d看板娘 */ -}} \u003cscript type=\"text/javascript\" charset=\"utf-8\" src=\"https://cdn.jsdelivr.net/npm/live2d-widget@3.1.4/lib/L2Dwidget.min.js\"\u003e\u003c/script\u003e \u003cscript type=\"text/javascript\"\u003e L2Dwidget.init({ model: { scale: 1, hHeadPos: 0.5, vHeadPos: 0.618, //jsonPath: 'https://cdn.jsdelivr.net/npm/live2d-widget-model-hijiki@1.0.5/assets/hijiki.model.json' //jsonPath: 'https://cdn.jsdelivr.net/npm/live2d-widget-model-tororo@1.0.5/assets/tororo.model.json' //jsonPath: 'https://cdn.jsdelivr.net/npm/live2d-widget-model-miku@1.0.5/assets/miku.model.json' //jsonPath: 'https://cdn.jsdelivr.net/npm/live2d-widget-model-hibiki@1.0.5/assets/hibiki.model.json' jsonPath: 'https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json' }, display: { superSample: 1, // 超采样等级 width: 120, // canvas的宽度 height: 300, // canvas的高度 position: 'left', // 显示位置：左或右 hOffset: 0, // canvas水平偏移 vOffset: 0, // canvas垂直偏移 }, mobile: { show: true, // 是否在移动设备上显示 scale: 1, // 移动设备上的缩放 motion: true, // 移动设备是否开启重力感应 }, react: { opacityDefault: 1, // 默认透明度 opacityOnHover: 1, // 鼠标移上透明度 }, }); \u003c/script\u003e {{- /* from themes\\LoveIt\\layouts\\partials\\assets.html */ -}} {{- partial \"plugin/analytics.html\" . -}} 未完待续 ","date":"2022-10-26","objectID":"/firstsum/:7:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["website"],"content":"参考链接 Live2D模型参考 雨临Lewis/Hugo系列 ","date":"2022-10-26","objectID":"/firstsum/:8:0","tags":["hugo","netlify","apache","loveit","git"],"title":"个人网站搭建","uri":"/firstsum/"},{"categories":["湍流燃烧仿真"],"content":"#Plot Equations ","date":"2022-10-10","objectID":"/tecplotana/:0:0","tags":["AECSC","LES","boffin"],"title":"Tecplot后处理函数式","uri":"/tecplotana/"},{"categories":["湍流燃烧仿真"],"content":"Tecplot 对于 Visit导出数据\r若要使用Visit导出的三维数据求ddx,ddy,ddz，则必须先在Visit中对场切块，否则导出的坐标格式为I,J,K。\r","date":"2022-10-10","objectID":"/tecplotana/:1:0","tags":["AECSC","LES","boffin"],"title":"Tecplot后处理函数式","uri":"/tecplotana/"},{"categories":["湍流燃烧仿真"],"content":"Q准则 {Q}=-1/2*((ddx(v4))**2+(ddy(v5))**2+(ddz(v6))**2)-ddy(v4)*ddx(v5)-ddz(v4)*ddx(v6)-ddz(v5)*ddy(v6) ","date":"2022-10-10","objectID":"/tecplotana/:1:1","tags":["AECSC","LES","boffin"],"title":"Tecplot后处理函数式","uri":"/tecplotana/"},{"categories":["湍流燃烧仿真"],"content":"Liutex {B2}=1/2*((ddy(v4)-ddx(v5))**2+(ddz(v4)-ddx(v6))**2+(ddz(v5)-ddy(v6))**2) {A2}=(ddx(v4))**2+1/2*(ddy(v6)+ddz(v5))**2+(ddy(v5))**2+1/2*(ddz(v4)+ddx(v6))**2+(ddz(v6))**2+1/2*(ddx(v5)+ddy(v4))**2 {Liutex}={B2}/({A2}+{B2}) ","date":"2022-10-10","objectID":"/tecplotana/:1:2","tags":["AECSC","LES","boffin"],"title":"Tecplot后处理函数式","uri":"/tecplotana/"},{"categories":["湍流燃烧仿真"],"content":"Visit ","date":"2022-10-10","objectID":"/tecplotana/:2:0","tags":["AECSC","LES","boffin"],"title":"Tecplot后处理函数式","uri":"/tecplotana/"},{"categories":["湍流燃烧仿真"],"content":"TKE TKE=0.5*(VAR_U-MEAN_U^2+VAR_V-MEAN_V^2+VAR_W-MEAN_W^2) ","date":"2022-10-10","objectID":"/tecplotana/:2:1","tags":["AECSC","LES","boffin"],"title":"Tecplot后处理函数式","uri":"/tecplotana/"},{"categories":["湍流燃烧仿真"],"content":"u’u’/Uc^2 u_var=(VAR_U-MEAN_U^2)/Uc^2(8.390755 for Circular 2.89668) u_var=(VAR_U-MEAN_U^2)/8.390755 ","date":"2022-10-10","objectID":"/tecplotana/:2:2","tags":["AECSC","LES","boffin"],"title":"Tecplot后处理函数式","uri":"/tecplotana/"},{"categories":["湍流燃烧仿真"],"content":"AECSC-IBM 注释规范 Ver.1 ","date":"2022-05-09","objectID":"/specification/:0:0","tags":["AECSC","LES","boffin"],"title":"AECSC-IBM注释规范","uri":"/specification/"},{"categories":["湍流燃烧仿真"],"content":"1. 注释规范说明 注释符： !\u003e (For Fortran \"!\u003e\" or \"!\u003c\" starts a comment and \"!!\" or \"!\u003e\" can be used to continue an one line comment into a multi-line comment.) 文件开头注释内容 文件注释 意义 @file 文件名(建议有) @author 作者名(建议有) @email 邮箱地址(可无) @version 文件版本(可无) @date 修改日期(建议有) @brief 对文件功能的简介(建议有) 函数与子程序开头注释内容 文件注释 意义 @brief 对函数或子程序功能的简介 @param[in] 参数(输入) @param[out] 参数(输出) ","date":"2022-05-09","objectID":"/specification/:1:0","tags":["AECSC","LES","boffin"],"title":"AECSC-IBM注释规范","uri":"/specification/"},{"categories":["湍流燃烧仿真"],"content":"示例 下面是一个注释过的Fortran文件与子程序的例子: !\u003e @file 文件名 !\u003e @author 作者名 !\u003e @email 邮箱地址(可无) !\u003e @version 文件版本(可无) !\u003e @date 2021-12-20(修改日期) !\u003e @brief 对文件功能的简介 '文件内容(不包括函数定义部分)' !\u003e @brief Normal vector solver subroutine(对函数或子程序功能的简介) !\u003e @param[in] I,J,K: Grid Location !\u003e @param[out] nx,ny,nz: Normal vector !\u003e @param[out] mark: identification for points located inside the fluid, !\u003e flow-solid boundary, solid zone SUBROUTINE imb_norm(I,J,K,nx,ny,nz,mark) use arrays,only :jo,ko, \u0026 imbnx,imbny,imbnz,imbmark use global,only : calcu_norm integer i,j,k,ijk,mark real nx,ny,nz ijk = i+jo(j)+ko(k) mark = imbmark(ijk) if(calcu_norm.ne.0)then nx = imbnx(ijk) ny = imbny(ijk) nz = imbnz(ijk) else nx = 0 ny = 0 nz = 0 endif return END Doxygen文档中该文件效果 Doxygen文档中该Subroutine效果 ","date":"2022-05-09","objectID":"/specification/:1:1","tags":["AECSC","LES","boffin"],"title":"AECSC-IBM注释规范","uri":"/specification/"},{"categories":["湍流燃烧仿真"],"content":"2. 修改版本说明 建议使用Markdown编写文档 .../SRC/软件名.软件版本.md ，例如imb.ver1211.md: # imb.ver1211 Compared to imb.ver.1125 ## output.F statistics.F * Calculate flout_stat and floin_stat ## imb.F90 * Correction for imb_f_crn, ijk... ---\u003e imbflag(ijk...) * Check F(ijk+nfo(nvu,nvv,nvw)) after CGSTAB for imbflag of ijknn,ijkss,... * Correction for COEF and nv ## check_rate.F * Set virtual_rate by flout_stat/floin_stat * rate ## boundary3.F * Reset boundary F(ijk+nfo(nvu,nvv,nvw)) value by floin/flout * F Doxygen文档中Markdown文档的效果 ","date":"2022-05-09","objectID":"/specification/:2:0","tags":["AECSC","LES","boffin"],"title":"AECSC-IBM注释规范","uri":"/specification/"},{"categories":["湍流燃烧仿真"],"content":"附: Doxygen文档生成使用简介(Fortran) 下载安装Doxygen。 下载安装graphviz，用于生成调用关系图。 使用Doxywizard(包含于Doxygen)生成技术文档： ","date":"2022-05-09","objectID":"/specification/:3:0","tags":["AECSC","LES","boffin"],"title":"AECSC-IBM注释规范","uri":"/specification/"},{"categories":["工作日志"],"content":"frpc在Windows端的使用 ","date":"2021-11-11","objectID":"/frp/:1:0","tags":["linux","FRP"],"title":"FRP端口转发搭建","uri":"/frp/"},{"categories":["工作日志"],"content":"1 修改frpc.ini [common] server_addr = 服务器地址 server_port = 服务器段frps.ini中开放的端口 [ssh] type = tcp local_ip = 127.0.0.1 local_port = 3389 remote_port = 服务器对外开放的端口 对于 TND Server\r对于TND_SERVER： [common] server_addr = 服务器地址 server_port = 6001（或6002） [ssh] type = tcp local_ip = 127.0.0.1 local_port = 3389 remote_port = 8001（或8002） ","date":"2021-11-11","objectID":"/frp/:1:1","tags":["linux","FRP"],"title":"FRP端口转发搭建","uri":"/frp/"},{"categories":["工作日志"],"content":"2.1 利用VBS文件执行（推荐） 以微软远程桌面3389端口为例，假定frpc.exe的路径为C:\\Users\\Admin\\Desktop\\frpc.exe。创建文件frp_rd.vbs，其内容为： set ws=WScript.CreateObject(\"WScript.Shell\") ws.Run \"C:\\Users\\User\\Desktop\\frpc.exe -c C:\\Users\\Admin\\Desktop\\frpc.ini\",0 若需实现开机自动启动，则用WIN+R运行shell:startup打开启动文件夹，并将文件frp_rd.vbs置于其中。 ","date":"2021-11-11","objectID":"/frp/:1:2","tags":["linux","FRP"],"title":"FRP端口转发搭建","uri":"/frp/"},{"categories":["工作日志"],"content":"2.2 在frp所在目录中基于命令行运行 .\\frpc -c .\\frpc.ini ","date":"2021-11-11","objectID":"/frp/:1:3","tags":["linux","FRP"],"title":"FRP端口转发搭建","uri":"/frp/"},{"categories":["工作日志"],"content":"3 在其他设备上登录 登录地址(服务器地址设为000.000.000.000): 服务器地址:服务器对外开放的端口 对于 TND Server\r登录地址： 服务器地址:8001（或8002）\r","date":"2021-11-11","objectID":"/frp/:1:4","tags":["linux","FRP"],"title":"FRP端口转发搭建","uri":"/frp/"},{"categories":["工作日志"],"content":"AECSC-IBM用户手册 ","date":"2021-10-02","objectID":"/aecsc_ibm/:0:0","tags":["AECSC","IBM","log"],"title":"AECSC-IBM UserGuide","uri":"/aecsc_ibm/"},{"categories":["工作日志"],"content":"文件结构 源文件夹(./SRC) 可执行文件夹(./EXEC) 背景网格文件夹(./EXEC/Decomp) IBM网格存储文件夹(./EXEC/imbmesh) IBM主程序(./EXEC/aecsc) 后处理(./EXEC/Restart) Visit(./EXEC/Restart), 其中标量imbflag为流固标记(流体1，固体0) ","date":"2021-10-02","objectID":"/aecsc_ibm/:1:0","tags":["AECSC","IBM","log"],"title":"AECSC-IBM UserGuide","uri":"/aecsc_ibm/"},{"categories":["工作日志"],"content":"imb.d 文件 xxx.STL 模型名 0或1 1表示几何模型为固壁区域，0表示几何模型为流体区域 0或1 1表示Y轴方向网格为直线，0表示网格Y轴扭曲(生成网格速度慢，不建议) 0或1 1表示读取已有浸没边界网格标记，0表示重新生成网格标记 0或1 1表示输出网格标记，0表示不输出 0或1 1补全空洞(网格密度低、质量差时可调用)，0表示不处理 0或1 1表示计算法向量，0表示不计算 0或1 1表示调用壁面函数，0表示不调用，其他数(如2)表示调用不含法向量的壁面函数 0或1 1表示流体非壁面区(与壁面间接相邻的网格)壁面处理，0表示不处理流体非壁面区 0.0~1.0 [第9行为1时生效]流体非壁面区(与壁面间接相邻的网格)速度处理权重，0.0为不处理，1.0为不允许沿壁面法向流动 0或1 [第8行为1时生效]1表示全邻居函数(线邻居和点邻居壁面处理)，0表示面邻居函数 0或1 1表示浸没边界角落网格用插值方法计算，0表示角落网格作为普通流体边界计算 0或1 1表示计算法向量，0表示不计算 ","date":"2021-10-02","objectID":"/aecsc_ibm/:2:0","tags":["AECSC","IBM","log"],"title":"AECSC-IBM UserGuide","uri":"/aecsc_ibm/"},{"categories":["工作日志"],"content":"input.d 文件 C----------------------------------------------------------------------- C LOAD BALANCING C----------------------------------------------------------------------- false /use if number blocks \u003e number of cores 是否自由分配CPU，否即block数\u003eCPU数 C----------------------------------------------------------------------- C INPUT/OUTPUT DIRECTORIES: C----------------------------------------------------------------------- /Decomp/ /读取网格文件夹 /Restart/ /读取RESTART数据文件夹 /Restart/ /读取PDF_RESTART数据文件夹 C----------------------------------------------------------------------- C COMMAND PARAMETERS C----------------------------------------------------------------------- true /FORM 网格是否有格式（边界代码有无表头） false true /RESTART, WRITE TO RESTART 是否继续，是否保存中间文件 40000 /LSTEP 最大迭代次数 50 /stepsave : write restart file interval 保存中间文件间隔迭代次数（覆盖） 500 /stepplot : write plot file interval 保存输出文件间隔迭代次数（新建） C----------------------------------------------------------------------- C... Large Eddy Simulation C----------------------------------------------------------------------- true false false /DYN_STRESS,SIMIL,DYNPHI 是否采用动态压力模型，无用，？ true false /DYN_RESTART_STRESS,DYNPHI_RESTART 是否保存动态压力中继文件，DYNPHI中继文件 0.1 0.09 0.09 /SMAGORINSKY CONSTANT,CXIA,CXIS smagorinsky常数，？，无用 false false /TURBSTAT,TURBREAD 是否求湍流平均值，是否读取湍流平均值 false /Digital Filter inflow 是否采用虚拟湍流进口 C----------------------------------------------------------------------- C... Some miscellaneous variables C----------------------------------------------------------------------- 2 /ITNUM 每步迭代次数 10000000 /INTEGRATION TIME 最大计算时间长 10000000 /NSKIP 输出结果跳过间隔 C----------------------------------------------------------------------- C... CFL variables C----------------------------------------------------------------------- 0.20 0.30 0.25 /CFLMIN,CFLMAX,CFL_OK 最小CFL数，最大CFL数，最优CFL数 C----------------------------------------------------------------------- C... Convection velocity: used only for convective outflow C----------------------------------------------------------------------- 0.0 0.0 0.0 /vx_c, vy_c, vz_c 边界速度x，y，z方向 C----------------------------------------------------------------------- C... Wall clock execution time in seconds C----------------------------------------------------------------------- 0.0 /TEXEC 最大运行小时数 C----------------------------------------------------------------------- C... Some physical properties C----------------------------------------------------------------------- 1.1965 1.8173 1.814E-5 1.01325e+05 !RHOAIR, RHOJET, VISCO, PRESSURE 空气密度，燃料密度，空气动力粘度，空气压力 C----------------------------------------------------------------------- C Variable C----------------------------------------------------------------------- 50 1.0e-04 /U-VEL 1 ICYCL(),TOL() x方向速度迭代残差累积步数，迭代残差 51 1.0e-04 /V-VEL 2 ICYCL(),TOL() y方向速度迭代残差累积步数，迭代残差 50 1.0e-04 /W-VEL 3 ICYCL(),TOL() z方向速度迭代残差累积步数，迭代残差 500 1.0e-04 /DP 4 ICYCL(),TOL() 压力迭代残差累积步数，迭代残差 0 1.0e-03 /F 5 ICYCL(),TOL() 混合分数迭代残差累积步数，迭代残差 0 1.0e-03 /F'' 6 ICYCL(),TOL() 混合分数脉动迭代残差累积步数，迭代残差 C----------------------------------------------------------------------- C... Combustion variables C----------------------------------------------------------------------- methane /fuel; methanol,methane,ethylene,n-heptane,propane,kerosene,ethanol 燃料，依次为甲醇、甲烷、乙烯、正庚烷、丙烷、煤油、乙醇 C----------------------------------------------------------------------- true /BURN 是否点燃，即化学反应 C----------------------------------------------------------------------- C... PDF equation variables C----------------------------------------------------------------------- true /solve for PDF 是否求解PDF方程 2 /number of stochastic fields 随机场数目 false true /READ_PDF,WRITE_PDF 是否读取PDF中继文件，是否保存PDF文件 true /stochastic noise reduction 是否采用随机降噪 10 1.0e-03 /ICYCL(),TOL() 迭代残差累积步数，迭代残差 C----------------------------------------------------------------------- C Radiative Heat Transfer C----------------------------------------------------------------------- false /Include radiate heat transfer: true/false 是否包含辐射换热 C---------------------------","date":"2021-10-02","objectID":"/aecsc_ibm/:3:0","tags":["AECSC","IBM","log"],"title":"AECSC-IBM UserGuide","uri":"/aecsc_ibm/"},{"categories":["工作日志"],"content":"inject_def 喷雾配置文件 C----------------------------------------------------------------------- C :::::::: FILE DEFINING THE INJECTION CHARACTERISTICS :::::: C----------------------------------------------------------------------- 0.0 0.0 0.0 ! x,y,z 喷射点位置 0.000115 ! 喷孔半径 1.0 0.0 0.0 ! 喷射方向矢量 0.0 30.0 ! 偏转角度 \u0026 扩散角度 true ! 是否空心喷雾 C----------------------------------------------------------------------- 100 ! 粒子直径数目 1 ! 每种直径的粒子数 C----------------------------------------------------------------------- 2.5 63.0 ! R-R积分分布：指数n，平均直径smd 8.6E-04 ! 质量流量 [Kg/sec] C----------------------------------------------------------------------- C Droplet properties: velocity magnitude, temperature [ Kelvin ] ::::::: C----------------------------------------------------------------------- 15.0 301.0 ! 液滴速度 [m/s] \u0026 温度 [K] C----------------------------------------------------------------------- false ! 是否读取中继喷射数据 C----------------------------------------------------------------------- true ! 是否在不同位置用指定SMD的空心圆锥喷雾 ","date":"2021-10-02","objectID":"/aecsc_ibm/:4:0","tags":["AECSC","IBM","log"],"title":"AECSC-IBM UserGuide","uri":"/aecsc_ibm/"},{"categories":["工作日志"],"content":"spark.d 点火配置文件 C----------------------------------------------------------------------- C Input file for the ED spark model C----------------------------------------------------------------------- true ! spark: true or false 0.005 ! spark duration time (s) 0.005 ! spark initiation time (s) 550.0 2000.0 ! initial air Temperature and maximum temperature (K) 2 ! number of sparks 0.015 0.0 0.01 -0.015 0.0 0.01 2 !spark_type，1为原ED模型，2为IBM稳定点火模型（2容易点着火） ","date":"2021-10-02","objectID":"/aecsc_ibm/:5:0","tags":["AECSC","IBM","log"],"title":"AECSC-IBM UserGuide","uri":"/aecsc_ibm/"},{"categories":["湍流燃烧仿真"],"content":"稳定双共轭梯度法 Bi-CGSTAB: A fast and smoothly converging variant of BI-CG for the solution of nonsymetric linear systems[] 双共轭梯度法(Bi-CG)是共轭梯度法(CG-S)(Conjugate Gradients-Squared)发展而来的。CG-S方法可能导致相当不规则的收敛行为，可能使舍入误差产生严重的抵消效应。稳定双共轭梯度法(Bi-CGSTAB)则似乎不受这些负面影响。 ","date":"2021-09-22","objectID":"/cgstab/:0:0","tags":["AECSC","IBM"],"title":"稳定双共轭梯度法","uri":"/cgstab/"},{"categories":["湍流燃烧仿真"],"content":"数学描述 编程语言整理 $P$ $V$ $D$ $S$ $R$ $R_0$ $T$ work(off1) work(off2) work(off3) work(off4) work(off5) work(off6) work(off7) $\\dfrac{\\partial u}{\\partial x}$ $\\dfrac{\\partial v}{\\partial x}$ $\\dfrac{\\partial w}{\\partial x}$ $P(ijk)=0,V(ijk)=0,D(ijk)=0$ 计算全场最大残差 $R(ijk)=coef(SC,ijk)\\cross F(ijks)+…+coef(RC,ijk)\\cross F(ijkr)$ $-coef(PC,ijk)\\cross f(ijkp)+coef(BPC,ijk)$ $error=max(\\abs{R(ijk)})$ 计算对角阵元素 $\\dfrac{1}{D(ijk)}=coef(PC,ijk)$ $-D(ijkw)\\cross coef(WC,ijk)\\cross coef(EC,ijkw)$ $-D(ijks)\\cross coef(SC,ijk)\\cross coef(NC,ijks)$ $-D(ijkl)\\cross coef(LC,ijk)\\cross coef(RC,ijkl)$ Solver LOOP initalization $\\rho=1,\\alpha =1,\\omega=1,S(ijk)=0$ ","date":"2021-09-22","objectID":"/cgstab/:1:0","tags":["AECSC","IBM"],"title":"稳定双共轭梯度法","uri":"/cgstab/"},{"categories":["湍流燃烧仿真"],"content":"LOOP (NCYCLE) $\\beta=\\dfrac{\\frac{\\alpha}{\\omega}}{\\rho}$ $\\rho =\\sum R_0(ijk)\\cross R(ijk)$ $\\beta=\\beta\\cross\\rho$ $P(ijk)=R(ijk)+\\beta\\cross(P(ijk)-\\omega\\cross V(ijk))$ 下三角矩阵 $S(ijk)=[P(ijk)+coef(WC,ijk)\\cross S(ijkw)+coef(SC,ijk)\\cross S(ijks)+coef(LC,ijk)\\cross S(ijkl)]\\cross D(ijk)$ 对角阵 $S(ijk)=\\dfrac{S(ijk)}{D(ijk)+small}$ 上三角阵 $S(ijk)=[P(ijk)+coef(EC,ijk)\\cross S(ijke)+coef(NC,ijk)\\cross S(ijkn)+coef(RC,ijk)\\cross S(ijkr)]\\cross D(ijk)$ $V(ijk)=coef(PC,ijk)\\cross S(ijk)$ $-coef(EC,ijk)\\cross S(ijke)-coef(WC,ijk)\\cross S(ijkw)$ $-coef(NC,ijk)\\cross S(ijkn)-coef(SC,ijk)\\cross S(ijks)$ $-coef(RC,ijk)\\cross S(ijkr)-coef(LC,ijk)\\cross S(ijkl)$ $\\alpha = \\dfrac{\\rho}{\\sum R_0(ijk)\\cross V(ijk)}$ $F(ijkp)+=\\alpha \\cross S(ijk)$ $S(ijk)=R(ijk)-\\alpha \\cross V(ijk)$ $R(ijk)=S(ijk)$ 下三角阵 $S(ijk)=[P(ijk)+coef(WC,ijk)\\cross S(ijkw)+coef(SC,ijk)\\cross S(ijks)+coef(LC,ijk)\\cross S(ijkl)]\\cross D(ijk)$ 对角阵 $S(ijk)=\\dfrac{S(ijk)}{D(ijk)+small}$ 上三角阵 $S(ijk)=[P(ijk)+coef(EC,ijk)\\cross S(ijke)+coef(NC,ijk)\\cross S(ijkn)+coef(RC,ijk)\\cross S(ijkr)]\\cross D(ijk)$ $T(ijk)=coef(PC,ijk)\\cross S(ijk)$ $-coef(EC,ijk)\\cross S(ijke)-coef(WC,ijk)\\cross S(ijkw)$ $-coef(NC,ijk)\\cross S(ijkn)-coef(SC,ijk)\\cross S(ijks)$ $-coef(RC,ijk)\\cross S(ijkr)-coef(LC,ijk)\\cross S(ijkl)$ $sum_1=\\sum T(ijk)\\cross R(ijk)$ $sum_2 = \\sum T(ijk)\\cross T(ijk)$ $\\omega = \\dfrac{sum_1}{sum_2}$ $F(ijkp)+=\\omega\\cross S(ijk)$ $R(ijk)-=\\omega\\cross T(ijk)$ ","date":"2021-09-22","objectID":"/cgstab/:1:1","tags":["AECSC","IBM"],"title":"稳定双共轭梯度法","uri":"/cgstab/"},{"categories":["湍流燃烧仿真"],"content":"AECSC-IBM 三角钝体测试 ","date":"2021-09-22","objectID":"/ibm_tri/:0:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"对照算例：BOFFIN计算结果 At Time-Step 20000 ","date":"2021-09-22","objectID":"/ibm_tri/:1:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"网格 ","date":"2021-09-22","objectID":"/ibm_tri/:1:1","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"瞬态速度(Velocity_magnitude) 标尺: (0, 45) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:1:2","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"平均流向速度(MEAN_U) 标尺: (-15, 35) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:1:3","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部瞬态速度矢量(Velocity) 标尺: (0, 45) m/s 区域：x = (0.00, 0.20) m ","date":"2021-09-22","objectID":"/ibm_tri/:1:4","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"对照算例：AECSC-IBM V1.0 ","date":"2021-09-22","objectID":"/ibm_tri/:2:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"网格 ","date":"2021-09-22","objectID":"/ibm_tri/:2:1","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"瞬态速度(Velocity_magnitude) 标尺: (0, 45) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:2:2","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"平均流向速度(MEAN_U) 标尺: (-15, 35) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:2:3","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部瞬态速度矢量(Velocity) 标尺: (0, 45) m/s 区域：x = (0.00, 0.20) m ","date":"2021-09-22","objectID":"/ibm_tri/:2:4","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"改进版本-面邻居边界函数 ref_weight = 0.0 只处理(无梯度边界和壁面速度函数处理) 与固壁网格面相邻的流体网格，包括N,S,W,E,L,R。 网格同上。 ","date":"2021-09-22","objectID":"/ibm_tri/:3:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"瞬态速度(Velocity_magnitude) 标尺: (0, 45) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:3:1","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"平均流向速度(MEAN_U) 标尺: (-15, 35) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:3:2","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部瞬态速度矢量(Velocity) 标尺: (0, 45) m/s 区域：x = (0.00, 0.20) m ","date":"2021-09-22","objectID":"/ibm_tri/:3:3","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"改进版本-全邻居边界函数 ref_weight = 1.0 处理(无梯度边界和壁面速度函数处理) 与固壁网格面相邻、点相邻、线相邻的流体网格， 包括： 面邻居(6) 线邻居(12) 点邻居(8) N,S,W,E,L,R NW,NE,SW,SE,NL,NR,SL,SR,WL,WR,EL,ER NWL,NWR,NEL,NER,SWL,SWR,SEL,SER 网格同上。 ","date":"2021-09-22","objectID":"/ibm_tri/:4:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"瞬态速度(Velocity_magnitude) 标尺: (0, 45) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:4:1","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"平均流向速度(MEAN_U) 标尺: (-15, 35) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:4:2","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部瞬态速度矢量(Velocity) 标尺: (0, 45) m/s 区域：x = (0.00, 0.20) m ","date":"2021-09-22","objectID":"/ibm_tri/:4:3","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"改进版本-带权重全邻居边界函数 ref_weight = 0.5 处理(无梯度边界和壁面速度函数处理) 与固壁网格面相邻、线相邻、点相邻的流体网格， 线相邻、点相邻流体网格边界处理乘权重，即认为这两种流体网格只有一部分靠着固壁 ","date":"2021-09-22","objectID":"/ibm_tri/:5:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"瞬态速度(Velocity_magnitude) 标尺: (0, 45) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:5:1","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"平均流向速度(MEAN_U) 标尺: (-15, 35) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:5:2","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部瞬态速度矢量(Velocity) 标尺: (0, 45) m/s 区域：x = (0.00, 0.20) m ","date":"2021-09-22","objectID":"/ibm_tri/:5:3","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"200万网格全邻居函数 ","date":"2021-09-22","objectID":"/ibm_tri/:6:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"瞬态速度(Velocity_magnitude) 标尺: (0, 45) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:6:1","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"平均流向速度(MEAN_U) 标尺: (-15, 35) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:6:2","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部瞬态速度矢量(Velocity) 标尺: (0, 45) m/s 区域：x = (0.00, 0.20) m ","date":"2021-09-22","objectID":"/ibm_tri/:6:3","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部网格重构(面邻居函数) ","date":"2021-09-22","objectID":"/ibm_tri/:7:0","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"瞬态速度(Velocity_magnitude) 标尺: (0, 45) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:7:1","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"平均流向速度(MEAN_U) 标尺: (-15, 35) m/s ","date":"2021-09-22","objectID":"/ibm_tri/:7:2","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"局部瞬态速度矢量(Velocity) 标尺: (0, 45) m/s 区域：x = (0.00, 0.20) m ","date":"2021-09-22","objectID":"/ibm_tri/:7:3","tags":["IBM"],"title":"三角钝体测试","uri":"/ibm_tri/"},{"categories":["湍流燃烧仿真"],"content":"压力耦合方程的半隐式方法 ","date":"2021-09-05","objectID":"/simple/:0:0","tags":["AECSC","LES","boffin"],"title":"SIMPLE流场计算算法","uri":"/simple/"},{"categories":["湍流燃烧仿真"],"content":"基本思想 对于给定的压力场（可以是假定值或是上一次迭代计算所得到的结果），求解 离散形式的动量方程 ，得到速度场。（因为压力场是假定的，可能是不精确的，得到的速度场一般不满足连续方程） 根据离散形式的连续方程所规定的速度与压力的关系得到压力修正方程，由压力修正方程得到压力修正值。 根据修正后的压力场求解得到新的速度场。 检查速度场是否收敛，若不收敛，则以现压力场为基础继续修正。 ","date":"2021-09-05","objectID":"/simple/:1:0","tags":["AECSC","LES","boffin"],"title":"SIMPLE流场计算算法","uri":"/simple/"},{"categories":["湍流燃烧仿真"],"content":"离散形式动量方程 $\\vec{u}^{n+1}-\\frac{4}{3}\\vec{u}^n+\\frac{1}{3}\\vec{u}^{n-1}+\\frac{2}{3}\\delta t\\cdot \\vec{T}\\cdot \\vec{u}=-\\frac{2}{3}\\delta t\\cdot \\vec{D}\\cdot\\vec{p}^{n+1}+\\frac{2}{3}\\delta t \\cdot \\vec{S}+\\Omicron(\\Delta t^3)$ $\\vec{T}$ : 对流项和扩散项 (convective and diffusive coef.) $\\vec{D}$ : 压力梯度相关项 (pressure grad.) $\\vec{S}$ : 已知项，包括交叉导数项 ( coef. known, including cross derivatives) 为保持二阶精度，上式由两段近似因子分解求解。 $\\vec{u}^{n+1}-\\frac{4}{3}\\vec{u}^n+\\frac{1}{3}\\vec{u}^{n-1}+\\frac{2}{3}\\delta t\\cdot \\vec{T}\\cdot \\vec{u}=-\\frac{2}{3}\\delta t\\cdot \\vec{D}\\cdot\\vec{\\Delta p}^{m}-\\frac{2}{3}\\delta t\\cdot\\delta t\\cdot \\vec{D}\\cdot\\vec{p}^{n}+\\frac{2}{3}\\delta t \\cdot \\vec{S}+\\Omicron(\\Delta t^3)$ 其中上标 $m\\isin(n,n+1)$，为相邻两个时间步中间的某时间， ","date":"2021-09-05","objectID":"/simple/:2:0","tags":["AECSC","LES","boffin"],"title":"SIMPLE流场计算算法","uri":"/simple/"},{"categories":["湍流燃烧仿真"],"content":"1. 第一阶段 在求解过程的第一阶段应用近似因子分解， $(\\vec{I}+\\frac{2}{3}\\delta t\\cdot \\vec{T}|n)\\underbrace{(\\vec{u}^m+\\frac{2}{3}\\delta t \\cdot\\vec{D}\\cdot\\vec{\\Delta p}^{m})}{u^*}=-\\frac{2}{3}\\delta t\\cdot \\vec{D}\\cdot\\vec{p}^{n}+\\frac{2}{3}\\delta t \\cdot \\vec{S}|_n+\\Omicron(\\Delta t^3)$ 上式中，$\\vec{u}^n$ 被合并到 $\\vec{S}$ 中，在时间 $m$ 处求解， 上式被分为两步求解， $\\vec{u}^*=(\\vec{I}+\\frac{2}{3}\\delta t\\cdot \\vec{T}|_n)^{-1}\\cdot\\frac{2}{3}\\delta t\\cdot (\\vec{D}\\cdot\\vec{p}^n+\\vec{S}|_n)$ $\\vec{u}^m=\\vec{u}^*-\\frac{2}{3}\\delta t \\vec{D}\\cdot \\vec{\\Delta p}^m$ 上式中，$\\vec{u}^m$ 为假定速度，不一定满足连续方程，具有一阶精度。 $\\vec{\\Delta p}^m$ 为未知量，需要结合连续方程求解。 ","date":"2021-09-05","objectID":"/simple/:2:1","tags":["AECSC","LES","boffin"],"title":"SIMPLE流场计算算法","uri":"/simple/"},{"categories":["湍流燃烧仿真"],"content":"2.第二阶段 在下一时间步($n+1$)处应用近似因子分解， $(\\vec{I}+\\frac{2}{3}\\delta t\\cdot \\vec{T}|m)\\underbrace{(\\vec{u}^{n+1}+\\frac{2}{3}\\delta t \\cdot\\vec{D}\\cdot\\vec{\\Delta p}^{n+1})}{u^{**}}=-\\frac{2}{3}\\delta t\\cdot \\vec{D}\\cdot\\vec{p}^{m}+\\frac{2}{3}\\delta t \\cdot \\vec{S}|_m+\\Omicron(\\Delta t^3)$ 同样的，将上式分为两步分解， $\\vec{u}^{**}=(\\vec{I}+\\frac{2}{3}\\delta t\\cdot \\vec{T}|_m)^{-1}\\cdot\\frac{2}{3}\\delta t\\cdot (\\vec{D}\\cdot\\vec{p}^m+\\vec{S}|_m)$ $\\vec{u}^{n+1}=\\vec{u}^{**}-\\frac{2}{3}\\delta t \\vec{D}\\cdot \\vec{\\Delta p}^{n+1}$ 由于$\\vec{u}^m$一阶近似于$\\vec{u}^{n+1}$，因此求解方法达到二阶精度。 ","date":"2021-09-05","objectID":"/simple/:2:2","tags":["AECSC","LES","boffin"],"title":"SIMPLE流场计算算法","uri":"/simple/"},{"categories":["湍流燃烧仿真"],"content":"3.压力梯度求解 $A_{1i}\\rho_i^|N-A{1i}\\rho_i^|S=A{1i}\\frac{\\delta t}{R+1}(\\frac{A_{ki}}{|J|}\\frac{\\partial \\Delta p^m}{\\partial \\xi_k})|N-A{1i}\\frac{\\delta t}{R+1}(\\frac{A_{ki}}{|J|}\\frac{\\partial \\Delta p^m}{\\partial \\xi_k})|_S$ $\\frac{\\partial \\Delta p^m}{\\partial \\xi_1}|n=\\frac{1}{2}(\\frac{(\\Delta p)^m_N-(\\Delta p)^m_S}{2}+\\frac{(\\Delta p)^m{NN}-(\\Delta p)^m_P}{2})$ 未完待续 ","date":"2021-09-05","objectID":"/simple/:2:3","tags":["AECSC","LES","boffin"],"title":"SIMPLE流场计算算法","uri":"/simple/"},{"categories":["湍流燃烧仿真"],"content":"文件格式—STL UINT8[80] – 标头 - 80 字节 UINT32 - 三角形数 - 4 个字节 foreach 三角形 - 50 个字节： REAL32[3] – 法线向量 - 12 字节 REAL32[3] – 顶点 1 - 12 字节 REAL32[3] – 顶点 2 - 12 字节 REAL32[3] – 顶点 3 - 12 字节 UINT16 – 属性字节数 - 2 个字节 ","date":"2021-09-01","objectID":"/stl/:0:0","tags":["AECSC","LES","boffin"],"title":"文件格式-STL","uri":"/stl/"},{"categories":["湍流燃烧仿真"],"content":"一种浸没边界及网格处理建模方法 ","date":"2021-08-28","objectID":"/ibm_mesh/:0:0","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"技术领域 本发明涉及一种用于航空发动机燃烧室等复杂结构内两相湍流燃烧数值模拟的浸没边界方法以及与之配套的网格生成方法。它涉及到计算流体力学、化学流体力学、航空燃气涡轮发动机燃烧室设计以及网格生成算法，属于航空燃气涡轮发动机燃烧室设计分析和两相湍流燃烧数值模拟领域。 ","date":"2021-08-28","objectID":"/ibm_mesh/:1:0","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"背景技术 ","date":"2021-08-28","objectID":"/ibm_mesh/:2:0","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"航空燃气涡轮发动机燃烧室数值模拟 燃烧室是航空发动机中实现能量转换，影响整机性能的核心部件。燃烧室几何结构复杂，其中的两相湍流燃烧现象存在强烈非线性关系，实验研究难度大、耗时长、风险高，迫切需求高保真高精度数值模拟。拥有先进发动机制造技术的国家在燃烧室数值模拟软件的研发中都投入了大量资金与科研力 量，开发了如美国国家燃烧仿真代码（NCC）等可用于航空发动机燃烧室设计的数值模拟软件。近年来，我国也逐渐重视发展航空发动机数值模拟软件，开发了流场仿真软件如AXX和APXX等。但国内对于航空发动机燃烧室的仿真和设计多采用商用软件，如PHOENICS，ANSYS-Fluent等，受到了严重的技术封锁。 对于燃气轮机燃烧室的数值模拟，大多局限于简化后的燃烧室模型或是结构简单的小型燃烧室。如对仅有一级旋流器的燃烧室简化模型进行计算等。对此，Yee Chee See指出，在真实燃气轮机燃烧室中充分应用LES的关键难点在于几何复杂度和与几何相关的网格划分的复杂度。高分辨率，高精度的燃烧室数值模拟是燃烧仿真的热点之一。莫妲等采用ANSYS-ICEM划分423万网格对三旋流燃烧室进行计算，得出出口温度分布与实验值符合较好的计算结果。丁勇能等采用ANSYS-ICEM-CFD 19.0绘制1.7亿网格对重型燃气轮机的单筒燃烧室进行数值模拟，得出分辨率较高，准确性较好的燃烧场模拟结果。采用ICEM等软件划分大规模网格难度较高，耗费大量时间，且网格质量难以保证。大规模网格的划分是燃烧室高分辨率仿真的难点之一。 ","date":"2021-08-28","objectID":"/ibm_mesh/:2:1","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"浸没边界方法 浸没边界方法最早由Peskin提出，将复杂结构的边界模化为N-S方程中的一种彻体力，用笛卡尔网格解决网格生成困难问题并提高计算效率。 Peskin C. S. Flow patterns around heart valves: a numerical method ［J］．J Comput Phys, 1972.2：2252－271． N-S方程: $\\dfrac{\\partial (\\rho u_i)}{\\partial t}+\\nabla\\cdot(\\rho u_i\\vec{u})=\\nabla\\cdot(\\mu\\nabla\\vec{u})+(-\\dfrac{\\partial p}{\\partial x_i}+S_{u_i})$ 令 $F=S_{u_i}$ ，代表单位体积收受到的彻体力。 一般用于： 模拟存在复杂结构的流场 模拟动边界问题 可以用于解决航空燃气涡轮发动机燃烧室高分辨率仿真的网格划分问题。 但也存在以下缺点： 浸没边界方法所采用的网格在曲面边界为锯齿状，不能精确地反应实际几何模型的表面形状，在燃烧数值模拟中液相燃料粒子追踪模拟时不能正确地计算粒子反弹，影响了对燃气轮机燃烧室喷雾液滴运动的模拟。 浸没边界法在计算中经常采用等距的笛卡尔网格，在一定程度上浪费了计算资源[浸入边界法及其应用_宫兆新]。如果仅在一些需要加密的地方对网格进行局部加密，将会有效提高模拟效率，节约计算资源。 自适应浸没边界法\rRoma等[Roma A M, Peskth C S, Berger M J. An adaptive version of the immersed boundary method[J]. J Comput Phys, 2000, 153:509-534.]采用自适应浸没边界法，对浸没边界附近的网格进行加密，加密区由逐级嵌套的加密层构成，每层包含一组互不交叠的矩阵网格区。 在数值求解时使用 Crank-Nicholson 法，即在混合 MAC 网格上应用 二阶投影法求解 N-S 方程。 在每一层的计算中则采用 Gauss-Seidel 法在混合 MAC 网格上求解，而每一层之间的数值传递则采用多层多网格法[Mthion M L. Two methods for the study of vortex patch evolution on locally refined grids[D]:Ph.D.thesis.Lawrence Berkeley Labo,ratury-University of California,Berkeley,1994][Roma A M. A multilevel self-adaptive version of the immersed boundary method[D]:Ph.D thesis.Courant Institute of Mathematical Science-New York University,1996.]。 自适应性浸入边界法缺点在于很难获得非线性对流项的高阶离散，因此不适合模拟高雷诺数运动。 虚拟网格有限差分法\r为模拟高雷诺数运动，虚拟网格有限差分法（Ghost-cell FDM）法将虚拟网格定义在浸没边界内部，保证每个虚拟网格至少与流场中的一个网格点相邻，流场计算在遇到虚拟网格就会停止，不需要计算浸入边界内部的网格点，虚拟网格上的各种变量值由周围流体网格点插值得到[Majumdar S, laccarino G, Durbin P A. RANS solver with adaptive structured boundary non-conforming grids[C]. Annu Res Briefs, 2001, 353－366.]。 切割网格法\r同样是为模拟高雷诺数运动，切割网格法则首先切割浸入边界所在的网格：如果初始网格的中心是流体，则切割后的网格成为一个 新的独立网格；如果不是，则与相邻网格合并。（目的是为了防止生成细微网格导致结果出错）。然后，插值计算每个网格面的质流量、对流项、耗散项和压力梯度。Ye T, Mittal R, Udatjynar H S, Shyy W. An accurate Cartesian grid method for viscous incompressible flows with complex boundaries[J]. Journal of Computational Physics, 1999, 156: 209-240. 切割网格法不需要求解浸入边界内部网格点，又同时保证了边界附近解的精度，目前己成功地应用于二维复杂流动，但对于三维问题模拟尚存在一定的困难，主要是因为切割会产生复杂的网格使流场控制方程的离散变得困难。 ","date":"2021-08-28","objectID":"/ibm_mesh/:2:2","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"小结 综上所述，考虑航空发动机燃烧室等复杂模型中的网格生成困难问题，本发明首先建立基于Möller-Trumbore算法对流场基础网格进行扫描的浸没边界网格生成方法。其次，针对浸没边界方法引起的计算效率下降问题，本发明利用坐标变换建立基于非笛卡尔结构网格的两相湍流燃烧模拟基础网格和相应的Navier-Stokes方程组的大涡模拟（LES）求解方法，结合浸没边界方法形成基于一种浸没边界和非笛卡尔网格的流动模拟方法。最后在网格生成过程中获取壁面网格法向量，增加锯齿网格边界粒子反弹算法，结合输运概率密度函数方程（TPDF）、例子破碎和蒸发模型等算法，实现了对航空燃气涡轮发动机燃烧室等复杂结构内的三维高分辨率两相湍流燃烧数值模拟。本发明提出了一种两相湍流燃烧数值模拟中用于航空发动机燃烧室等复杂模型内的浸没边界网格生成与应用方法，相比传统燃烧数值模拟方法能更快速地生成高质量、高分辨率、易于分块并行的网格，相比其他浸没边界方法能在保证对流项离散精度前提下，通过局部加密提高模拟效率，并且可以正确处理燃料液滴粒子在壁面处的反弹或黏附，适用于航空发动机燃烧室两相湍流燃烧数值模拟。 ","date":"2021-08-28","objectID":"/ibm_mesh/:2:3","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"基网格局部加密与坐标变换 坐标变换\r坐标轴名 原始坐标系 变换后坐标系 $x$ $x_1$ $\\xi_1$ $y$ $x_2$ $\\xi_2$ $z$ $x_3$ $\\xi_3$ 坐标变换 Jacobian 矩阵 $J_{ij}=\\dfrac{\\partial x_i}{\\partial\\xi_i}$ 其代数余子式 $A=|J||J|^{-1}$ 根据链式法则，有 $\\dfrac{\\partial \\phi}{\\partial x_i}=\\dfrac{A_{ij}}{|J|}\\dfrac{\\partial \\phi}{\\partial\\xi_j}$ 原始坐标系中滤波后的N-S方程张量形式为： $\\dfrac{\\partial \\bar{\\rho}}{\\partial t}+\\dfrac{\\partial \\bar{\\rho}\\tilde{u_i}}{\\partial{x_j}}=0\\\\ \\dfrac{\\partial \\bar{\\rho}\\tilde{u_i}}{\\partial{t}}+\\dfrac{\\partial \\bar{\\rho}\\widetilde{u_iu_j}}{\\partial x_j}=-\\dfrac{\\partial \\bar{p}}{\\partial x_i}+\\dfrac{\\partial \\bar{\\sigma_{ij}}}{\\partial x_j}$ 任何 $\\vec{x}\\rightarrow\\vec{\\xi}$ 的坐标变换都不存在 $\\dfrac{\\partial \\frac{A_{ik}}{|J|}}{\\partial\\xi_k}$ 项， 因此在变换后坐标系中，滤波后的N-S方程张量形式为： 连续方程： $\\dfrac{\\partial \\bar{\\rho}}{\\partial t}+\\dfrac{\\partial}{\\partial\\xi_k}(\\dfrac{A_{ki}}{|J|}\\bar{\\rho}\\tilde{u_i})=0$ 动量方程： $\\dfrac{\\partial\\bar{\\rho}\\tilde{u_i}}{\\partial t}+\\dfrac{\\partial}{\\partial \\xi_k}(\\dfrac{A_{kj}}{|J|}\\bar{\\rho}\\tilde{u_i}\\tilde{u_j})=-\\dfrac{A_{ki}}{|J|}\\dfrac{\\partial\\bar{p}}{\\partial\\xi_k}+\\dfrac{A_{ki}}{|J|}S_{u_i}+\\dfrac{\\partial}{\\partial\\xi_k}(\\dfrac{A_{ki}}{|J|})[\\mu_t\\dfrac{A_{lj}}{|J|}\\dfrac{\\partial\\tilde{u_i}}{\\partial\\xi_l}+\\mu_t\\dfrac{A_{li}}{|J|}\\dfrac{\\partial\\tilde{u_j}}{\\partial\\xi_l}]$ 标量守恒方程： $\\dfrac{\\partial\\bar{\\rho}\\tilde{\\phi}}{\\partial t}+\\dfrac{\\partial}{\\partial \\xi_k}(\\dfrac{A_{ki}}{|J|}\\bar{\\rho}\\tilde{u_i}\\tilde{\\phi})=\\dfrac{\\partial}{\\partial\\xi_k}(\\dfrac{A_{ki}}{|J|})[\\mu_t\\dfrac{A_{li}}{|J|}\\dfrac{\\partial\\tilde{\\phi}}{\\partial\\xi_l}]$ 其中，$\\mu_t$ 考虑了分子黏度和湍流黏度，扩散项包括粘性应力和亚网格尺度应力， 将应变张量和湍动能的迹的影响作用加入热力学压强，形成虚拟压强 $p=p_{ther}+\\frac{2}{3}\\mu_t(\\frac{A_{ml}}{|J|}\\frac{\\partial u_m}{\\partial \\xi_l}+k)\\delta_{ij}$ 用Gauss-Ostrogradskii定理将守恒方程在体积$\\partial V$上积分，得守恒方程积分形式： 连续方程： $\\int_{\\partial V}\\dfrac{\\partial \\bar{\\rho}}{\\partial t}+\\int_{\\partial S}\\underbrace{A_{ik}\\bar{\\rho}\\tilde{u_i}}_{G_k}n_kdS=0$ 动量方程： $\\int_{\\partial V}\\dfrac{\\partial\\bar{\\rho}\\tilde{u_i}}{\\partial t}dV+\\underbrace{\\int_{\\partial S}G_k\\tilde{u_i}n_kdS}{\\text{对流项}}=-\\int{\\partial V}A_{ki}\\dfrac{\\partial\\bar{p}}{\\partial\\xi_k}dV+\\underbrace{\\int_{\\partial V}A_{ki}S_{u_i}dV}{\\text{浸没边界体积力源项}}+\\underbrace{[\\mu_t\\dfrac{A{lj}A_{kj}}{|J|}\\dfrac{\\partial\\tilde{u_i}}{\\partial\\xi_l}+\\mu_t\\dfrac{A_{li}A_{kj}}{|J|}\\dfrac{\\partial\\tilde{u_j}}{\\partial\\xi_l}]n_kdS}_{\\text{扩散项}}$ 上式中压力项被视为彻体力，按照非保守力处理。 标量守恒方程： $\\int_{\\partial V}\\dfrac{\\partial \\bar{\\rho}\\tilde{\\phi}}{\\partial t}dV+\\underbrace{\\int_{\\partial S}G_k\\tilde{\\phi}n_kdS}{\\text{对流项}}=\\underbrace{\\int{\\partial S}[\\mu_t\\dfrac{A_{li}A_{ki}}{|J|}\\dfrac{\\partial\\tilde{\\phi}}{\\partial \\xi_l}]n_k}_{\\text{扩散项}}$ ","date":"2021-08-28","objectID":"/ibm_mesh/:3:0","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"扫描几何模型生成浸没边界网格 … ","date":"2021-08-28","objectID":"/ibm_mesh/:4:0","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"流固耦合边界法向量处理 … ","date":"2021-08-28","objectID":"/ibm_mesh/:5:0","tags":["IBM"],"title":"一种浸没边界及网格处理建模方法","uri":"/ibm_mesh/"},{"categories":["湍流燃烧仿真"],"content":"大涡模拟 ","date":"2021-08-22","objectID":"/les/:0:0","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"控制方程 张量\r$u_i=u_x\\vec{i}+u_y\\vec{j}+u_z\\vec{k}$ $\\tau_{ij}=\\begin{bmatrix}\\tau_{11}\u0026\\tau_{12}\u0026\\tau_{13}\\\\ \\tau_{21}\u0026\\tau_{22}\u0026\\tau_{23}\\\\ \\tau_{31}\u0026\\tau_{32}\u0026\\tau_{33}\\end{bmatrix}$ $u_i x_i=u_1 x_1 + u_2 x_2 +u_3 x_3$\r质量守恒方程 (连续方程) $\\dfrac{\\partial \\rho}{\\partial t}+\\dfrac{\\partial \\rho u_i}{\\partial x_i}=0$ 也可写作： $\\dfrac{\\partial \\rho}{\\partial t}+\\nabla\\cdot(\\rho \\vec{V})=0$ 算子\r汉密尔顿算子$\\nabla$： $\\nabla\\cdot\\vec{a}=div(\\vec{a})=\\dfrac{\\partial a_x}{\\partial x}+\\dfrac{\\partial a_y}{\\partial y}+\\dfrac{\\partial a_z}{\\partial z}$表示散度(标量)， $\\nabla\\vec{a}=grad(\\vec{a})=(\\dfrac{\\partial a_x}{\\partial x},\\dfrac{\\partial a_y}{\\partial y},\\dfrac{\\partial a_z}{\\partial z})$表示梯度(矢量)， 拉普拉斯算子$\\Delta$： $\\Delta\\vec{a}=\\nabla^2\\vec{a}=\\nabla\\cdot\\nabla\\vec{a}=\\dfrac{\\partial^2 a_x}{\\partial^2 x}+\\dfrac{\\partial^2 a_y}{\\partial^2 y}+\\dfrac{\\partial^2 a_z}{\\partial^2 z}$ 连续方程形式\r欧拉形式（即上式）: $\\dfrac{\\partial \\rho}{\\partial t}+\\nabla\\cdot(\\rho \\vec{V})=0$ 含义: 控制体质量的变化等于流入控制体的质量 拉格朗日形式: $\\dfrac{D\\rho}{Dt}+\\rho(\\nabla\\vec{V})=0$ 含义: 体系的密度由变化体系的体积变化引起 牛顿流体的动量守恒方程 (N-S方程) $\\dfrac{\\partial\\rho u_i}{\\partial t}+\\dfrac{\\partial\\rho u_i u_j}{\\partial x_j}=-\\dfrac{\\partial P}{\\partial x_i}+\\dfrac{\\partial \\sigma_{ij}}{\\partial x_i}+f(x,t)$ 牛顿流体的应力张量 $\\sigma_{ij}$\r$\\sigma_{ij}=2\\mu S_{ij}-\\frac{2}{3}\\mu S_{kk}\\delta_{ij}$ 对牛顿流体,应力张量的分量可以分解为分子黏度和局部速度梯度的函数 分子黏度 $\\mu$ 依赖于温度 $T$,由Sutherland定律等幂律给出 动量方程形式\r拉格朗日形式: $\\dfrac{D\\vec{V}}{Dt}=-\\dfrac{\\mu}{\\rho}\\nabla^2\\vec{V}+\\dfrac{1}{3}\\dfrac{\\mu}{\\rho}\\nabla\\cdot(\\nabla \\vec{V})-\\dfrac{1}{\\rho}\\nabla P+\\vec{f_b}$ 含义: 体系动量变化 = 粘性正应力项+粘性切应力项+压差力项+体积力项 密度状态方程 $\\dfrac{P}{\\rho}=\\dfrac{R^0T}{W}$ 其中，$R^0$为气体通用常数，$W$为流体分子量 密度状态方程与能量方程\r质量守恒方程和动量守恒方程中的密度$\\rho$为未知数 能量守恒方程和密度状态方程都是为了求解 $\\rho$ 密度状态方程将未知数 $\\rho$ 转变为 $T$, 再结合混合物焓守恒方程求解 混合物焓守恒方程 控制方程的通用形式 $\\dfrac{\\partial(\\rho\\phi)}{\\partial t}+\\dfrac{\\partial(\\rho u_i\\phi)}{\\partial x_i}=\\dfrac{\\partial}{\\partial x_i}(\\Gamma\\dfrac{\\partial \\phi}{\\partial x_i})+S$ 式中各项依次为： 瞬态项(Transient)，对流项(Convective)，扩散项(Diffusive)，源项(Source) (term) 其中，$\\phi$表示通用变量，$\\Gamma$ 代表广义扩散系数，$S$ 代表广义源项。 对应含义 $\\phi$ $\\Gamma$ $S$ 连续方程 1 0 0 动量方程 $u_i$ $\\mu$ $-\\frac{\\partial p}{\\partial x_i}+S_i$ 能量方程 T $\\frac{k}{c}$ $S_T$ 组分方程 c_s $D_s\\rho$ $S_S$ 所有控制方程都可以经过适当的数学处理，将因变量，时变项，对流项，扩散项写为标准形式，然后将右侧其余各项集中起来定义为源项，从而化为通用微分方程。 ","date":"2021-08-22","objectID":"/les/:1:0","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"守恒型控制方程 将对流项采用散度的形式表示，物理量都在微分号内，这种形式的控制方程为守恒型控制方程(上述均为守恒型)。 与非守恒型相比，守恒型更能保持物理量守恒的性质，在有限体积法(FVM)中可方便地建立离散方程。 名称 形式 连续方程 $\\dfrac{\\partial \\rho}{\\partial t}+\\nabla\\cdot(\\rho\\vec{u})=0+0$ 动量方程 $\\dfrac{\\partial (\\rho u_i)}{\\partial t}+\\nabla\\cdot(\\rho u_i\\vec{u})=\\nabla\\cdot(\\mu\\nabla\\vec{u})+(-\\dfrac{\\partial p}{\\partial x_i}+S_{u_i})$ 能量方程 $\\dfrac{\\partial (\\rho T)}{\\partial t}+\\nabla\\cdot(\\rho T\\vec{u})=\\nabla\\cdot(\\dfrac{k}{c}\\nabla T)+S_T$ 状态方程 $\\dfrac{P}{\\rho}=\\dfrac{R^0T}{W}$ ","date":"2021-08-22","objectID":"/les/:1:1","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"离散形式控制方程 通用形式 $\\dfrac{\\partial (\\rho \\phi)}{\\partial t}+\\nabla \\cdot (\\rho \\vec{u} \\phi)=\\nabla \\cdot (\\Gamma \\nabla \\phi)+S$ 瞬态项 $\\int_{t}^{t+\\Delta t} \\int_{\\Delta V} \\dfrac{\\partial(\\rho \\phi)}{\\partial t}dVdt = \\int_{\\Delta V}[\\int_{t}^{t+\\Delta t}\\rho \\dfrac{\\partial\\phi}{\\partial t}dt]dV = \\rho ^0 (\\phi_P-\\phi_P^0)\\Delta V$ 源项 $\\int_{t}^{t+\\Delta t} \\int_{\\Delta V}SdVdt=\\int_{t}^{t+\\Delta t} S\\Delta V dt=\\int_{t}^{t+\\Delta t}(S_c+S_P\\phi_P)\\Delta V dt=\\int_{t}^{t+\\Delta t}(S_c\\Delta V +S_P\\phi_P\\Delta V )dt$ 对流项 $\\int_{t}^{t+\\Delta t} \\int_{\\Delta V}\\nabla \\cdot (\\rho \\vec{u} \\phi)dVdt=\\int_t^{t+\\Delta t}[(\\rho u \\phi A)_e-(\\rho u \\phi A)_w+(\\rho u \\phi A)_n-(\\rho u \\phi A)_s+(\\rho u \\phi A)_l-(\\rho u \\phi A)_r]$ $=\\int_t^{t+\\Delta t}[(\\rho u A)_e \\phi_e-(\\rho u A) \\phi+(\\rho u A)_n \\phi_n-(\\rho u A)_s \\phi_s+(\\rho u A)_l \\phi_l-(\\rho u A)_r \\phi_r]$ 扩散项 $\\int_{t}^{t+\\Delta t} \\int_{\\Delta V}\\nabla \\cdot (\\Gamma \\nabla \\phi)dVdt=\\int_{t}^{t+\\Delta t} [(\\Gamma \\dfrac{\\partial \\phi}{\\partial x}A)_e-(\\Gamma \\dfrac{\\partial \\phi}{\\partial x}A)_w+(\\Gamma \\dfrac{\\partial \\phi}{\\partial x}A)_n-(\\Gamma \\dfrac{\\partial \\phi}{\\partial x}A)_s+(\\Gamma \\dfrac{\\partial \\phi}{\\partial x}A)_l-(\\Gamma \\dfrac{\\partial \\phi}{\\partial x}A)_r]$ $=\\int_{t}^{t+\\Delta t} [(\\Gamma_e A_e \\dfrac{\\phi_E-\\phi_P}{(\\delta x)_e})-(\\Gamma_w A_w \\dfrac{\\phi_W-\\phi_P}{(\\delta x)_w})+(\\Gamma_n A_n \\dfrac{\\phi_N-\\phi_P}{(\\delta x)_n})-(\\Gamma_s A_s \\dfrac{\\phi_S-\\phi_P}{(\\delta x)_s})+(\\Gamma_l A_l \\dfrac{\\phi_L-\\phi_P}{(\\delta x)_l})-(\\Gamma_r A_r \\dfrac{\\phi_R-\\phi_P}{(\\delta x)_r})$ 处理 1：在对流项中引入离散格式用节点物理量表示界面物理量 处理 2：在对流项、扩散项、源项中引入全隐式时间积分，例如：$\\int_{t}^{t+\\Delta t}\\phi_P dt = \\phi_P \\Delta t$ 得到瞬态对流-扩散问题离散方程： $A_P\\phi_P=A_E\\phi_E+A_W\\phi_W+A_N\\phi_N+A_S\\phi_S+A_L\\phi_L+A_R\\phi_R+S_c$ ","date":"2021-08-22","objectID":"/les/:1:2","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"滤波 大涡滤波概念\r大涡模拟(LES)对大尺度湍流运动进行直接计算， 而对于这些运动导致的小于计算网格尺度(滤波尺度)的湍流运动被用模型模拟。 传统湍流建模方法(RANS)和LES之间的主要区别是用于推导运动方程的“平均”方法。 LES不涉及系综平均，而是将空间滤波器应用于N-S方程。 通用变量 $\\phi (\\vec{x},t)$ 为在 $\\vec{x}=(x_1,x_2,x_3)$ 处的瞬时流场变量。 经大涡滤波过滤后的变量为 $\\bar{\\phi}(\\vec{x},t)$ 。 $\\bar{\\phi}(\\vec{x},t) = \\iiint_{-\\infty}^{+\\infty}G(\\vec{x}-\\vec{x’},\\Delta) \\phi(\\vec{x},t)d\\vec{x’}$ $G(\\vec{x}-\\vec{x’},\\Delta)$ 为与网格尺度 $\\Delta=\\sqrt[3]{\\Delta x_1\\Delta x_2\\Delta x_3}$ 相关的滤波函数。 若对 $\\phi (\\vec{x},t)$ 进行Fourier变换, 得: $\\hat{\\phi} (\\vec{x},t)=\\iiint_{-\\infty}^{+\\infty}\\phi(\\vec{x},t)e^{-i\\kappa_ix_i}d\\vec{x}$ 再对 $\\hat{\\phi} (\\vec{x},t)$ 进行大涡滤波, 得： $\\bar{\\hat{\\phi}}(\\vec{\\kappa},t)=\\hat{G}(\\vec{\\kappa},t)*\\hat{\\phi}(\\vec{\\kappa},t)$ 上式中 $*$ 为卷积符号 由上式可知，滤波函数功能为去除波数(频率)大于某固定值 $\\kappa_c$ 的分量( 由Fourier变换得到的 )。 以箱式( box or top-hat )滤波为例 $G(\\vec{x}-\\vec{x’},\\Delta)=\\begin{cases} \\frac{1}{\\Delta^3} \u0026\\text{if $x_i’ \\in [x_i-\\frac{\\Delta}{2},x_i+\\frac{\\Delta}{2}],\\forall i \\in 1,2,3$}\\\\ 0 \u0026\\text{else} \\end{cases}$ 由于滤波带宽 $\\Delta$ 可以是空间的函数，空间微分后在滤波与滤波后再空间微分不一致。 $\\dfrac{\\overline{\\partial \\phi}}{\\partial x_i} \\ne \\dfrac{\\partial \\overline{\\phi}}{\\partial x_i}$ 式中不等号两侧的差异为换向误差(communication error) 写作$C$。 换向误差(communication error)\r对于对称核线性积分算子(埃尔米特核线性积分算子)，换向误差和中心差分误差数量级一致。 (S. Ghosal and P. Moin. The basic equations for the large eddy simulation of turbulent flows in complex geometry. Journal of Computational Physics, 118:24–37, 1995.) 虽然中心差分的数值误差主要是弥散的，换向误差可以近似为纯耗散性质。 M. Wille. Large Eddy Simulation of a Plane Jet in a Cross Flow. PhD thesis, Imperial College, University of London, London, (UK), 1997. 相对于由SGS模型产生的湍流动能和标量方差的估计耗散而言，换向误差相关的损耗可以忽略不计 F. Di Mare. Large Eddy Simulation of reacting and non-reacting turbulent flows in complex geometries. PhD thesis, Imperial College, University of London, London, (UK), 2002. 考虑到密度的变化，引入密度加权滤波算子, 该算子与未加权的算子性质相同。 因此将Favre滤波函数(密度加权滤波函数)定义为： $\\widetilde{\\phi}=\\dfrac{\\overline{\\rho\\phi}}{\\bar{\\rho}}$ 滤波后的N-S方程张量形式为： $\\dfrac{\\partial \\bar{\\rho}}{\\partial t}+\\dfrac{\\partial \\bar{\\rho}\\tilde{u_i}}{\\partial{x_j}}=0\\\\ \\dfrac{\\partial \\bar{\\rho}\\tilde{u_i}}{\\partial{t}}+\\dfrac{\\partial \\bar{\\rho}\\widetilde{u_iu_j}}{\\partial x_j}=-\\dfrac{\\partial \\bar{p}}{\\partial x_i}+\\dfrac{\\partial \\bar{\\sigma_{ij}}}{\\partial x_j}$ 根据滤波和空间微分算子的可交换性假设，对输运方程中的变量进行来滤波相当于对输运方程滤波。 由于分子黏度与温度的关系是非线性的， $\\dfrac{\\partial \\bar{\\sigma_{ij}}}{\\partial x_j}$ 中也存在未知数，但其影响很小。 U. Piomelli. Large-eddy simulation: achievements and challanges. Progress in Aerospace Sciences, 35:335–362, 1999. 因此黏性应力张量可表示为： $\\bar{\\sigma_{ij}}=-2\\bar{\\mu}\\widetilde{S_{ij}}+\\delta_{ij}\\frac{2}{3}\\bar{\\mu}\\widetilde{S_{kk}}$ $\\dfrac{\\partial \\bar{\\rho}\\widetilde{u_iu_j}}{\\partial x_j}$ 中的 $\\bar{\\rho}\\widetilde{u_iu_j}$ 为未知项，必须封闭。 通过引入亚网格应力项来封闭： $\\tau_{ij}=\\bar{\\rho}(\\widetilde{u_iu_j}-\\widetilde{u_i}\\widetilde{u_j})$ Smagorinsky-Lilly模型文献\r马赫数低时，可忽略SGS应力张量的各向异性部分，忽略各向同性部分 M. Y. Erlebacher, G.and Hussaini, C. G. Speziale, and T. A. Zang. Toward the large-eddy simulation of compressible turbulent flows. Journal of Fluid Mechanics, 238:155–185, 1992. Smagorinsky-Lilly模型 [1] D. K. Lilly. The representation of small-scale turbulence in numerical simulation rxperiments. In IBM Sci. Comput. Symp. on Environmental Sci. Thomas J. Watson Research Center, Yorktown Heights, NY, 1967. [2] J. Smagorinsky. General circulation experiments with the primitive equations.I - The basic experiment. Monthly Wheather Review, 91:99–165, 1963. Smagorinsky-Lilly模型动态校准版 [1] M. Germano, U. Piomelli, Moin P., and W. H. Cabot. A dynamic sub-grid-scale eddy viscosity model. Physics of Fluids, 23:1760–1765, 1991. [2] U. Piomelli and J. Liu. Large eddy simulation of rotating channel flows using a localised dynamic model. Physics of Fluids, 7(4):839–848, 1995. Germano将SGS应力参数化为： $\\tau_{ij}-\\frac{1}{3}\\tau_{kk}\\delta_{ij}=2\\rho C_s\\Delta^2||\\widetilde{S_{ij}}||F\\widetilde{S{ij}}$ 其中， $||\\widetilde{S_{ij}}||_F$ 为应变率张量的Frobenius模量, 滤波器宽度为单元体积的立方根 $\\Delta=\\sqrt[3]{\\Delta x_1\\Delta x_2\\Delta x_3}$ 。 [1] M. Germano. A proposal for redefinition of t","date":"2021-08-22","objectID":"/les/:2:0","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"坐标变换 坐标变换\r坐标轴名 原始坐标系 变换后坐标系 $x$ $x_1$ $\\xi_1$ $y$ $x_2$ $\\xi_2$ $z$ $x_3$ $\\xi_3$ 坐标变换 Jacobian 矩阵 $J_{ij}=\\dfrac{\\partial x_i}{\\partial\\xi_i}$ 其代数余子式 $A=|J||J|^{-1}$ 根据链式法则，有 $\\dfrac{\\partial \\phi}{\\partial x_i}=\\dfrac{A_{ij}}{|J|}\\dfrac{\\partial \\phi}{\\partial\\xi_j}$ 原始坐标系中滤波后的N-S方程张量形式为： $\\dfrac{\\partial \\bar{\\rho}}{\\partial t}+\\dfrac{\\partial \\bar{\\rho}\\tilde{u_i}}{\\partial{x_j}}=0\\\\ \\dfrac{\\partial \\bar{\\rho}\\tilde{u_i}}{\\partial{t}}+\\dfrac{\\partial \\bar{\\rho}\\widetilde{u_iu_j}}{\\partial x_j}=-\\dfrac{\\partial \\bar{p}}{\\partial x_i}+\\dfrac{\\partial \\bar{\\sigma_{ij}}}{\\partial x_j}$ 任何 $\\vec{x}\\rightarrow\\vec{\\xi}$ 的坐标变换都不存在 $\\dfrac{\\partial \\frac{A_{ik}}{|J|}}{\\partial\\xi_k}$ 项， 因此在变换后坐标系中，滤波后的N-S方程张量形式为： 连续方程： $\\dfrac{\\partial \\bar{\\rho}}{\\partial t}+\\dfrac{\\partial}{\\partial\\xi_k}(\\dfrac{A_{ki}}{|J|}\\bar{\\rho}\\tilde{u_i})=0$ 动量方程： $\\dfrac{\\partial\\bar{\\rho}\\tilde{u_i}}{\\partial t}+\\dfrac{\\partial}{\\partial \\xi_k}(\\dfrac{A_{kj}}{|J|}\\bar{\\rho}\\tilde{u_i}\\tilde{u_j})=-\\dfrac{A_{ki}}{|J|}\\dfrac{\\partial\\bar{p}}{\\partial\\xi_k}+\\dfrac{\\partial}{\\partial\\xi_k}(\\dfrac{A_{ki}}{|J|})[\\mu_t\\dfrac{A_{lj}}{|J|}\\dfrac{\\partial\\tilde{u_i}}{\\partial\\xi_l}+\\mu_t\\dfrac{A_{li}}{|J|}\\dfrac{\\partial\\tilde{u_j}}{\\partial\\xi_l}]$ 标量守恒方程： $\\dfrac{\\partial\\bar{\\rho}\\tilde{\\phi}}{\\partial t}+\\dfrac{\\partial}{\\partial \\xi_k}(\\dfrac{A_{ki}}{|J|}\\bar{\\rho}\\tilde{u_i}\\tilde{\\phi})=\\dfrac{\\partial}{\\partial\\xi_k}(\\dfrac{A_{ki}}{|J|})[\\mu_t\\dfrac{A_{li}}{|J|}\\dfrac{\\partial\\tilde{\\phi}}{\\partial\\xi_l}]$ 其中，$\\mu_t$ 考虑了分子黏度和湍流黏度，扩散项包括粘性应力和亚网格尺度应力， 将应变张量和湍动能的迹的影响作用加入热力学压强，形成虚拟压强 $p=p_{ther}+\\frac{2}{3}\\mu_t(\\frac{A_{ml}}{|J|}\\frac{\\partial u_m}{\\partial \\xi_l}+k)\\delta_{ij}$ 用Gauss-Ostrogradskii定理将守恒方程在体积$\\partial V$上积分，得守恒方程积分形式： 连续方程： $\\int_{\\partial V}\\dfrac{\\partial \\bar{\\rho}}{\\partial t}+\\int_{\\partial S}\\underbrace{A_{ik}\\bar{\\rho}\\tilde{u_i}}_{G_k}n_kdS=0$ 动量方程： $\\int_{\\partial V}\\dfrac{\\partial\\bar{\\rho}\\tilde{u_i}}{\\partial t}dV+\\underbrace{\\int_{\\partial S}G_k\\tilde{u_i}n_kdS}{\\text{对流项}}=-\\int{\\partial V}A_{ki}\\dfrac{\\partial\\bar{p}}{\\partial\\xi_k}dV+\\underbrace{[\\mu_t\\dfrac{A_{lj}A_{kj}}{|J|}\\dfrac{\\partial\\tilde{u_i}}{\\partial\\xi_l}+\\mu_t\\dfrac{A_{li}A_{kj}}{|J|}\\dfrac{\\partial\\tilde{u_j}}{\\partial\\xi_l}]n_kdS}_{\\text{扩散项}}$ 上式中压力项被视为彻体力，按照非保守力处理。 标量守恒方程： $\\int_{\\partial V}\\dfrac{\\partial \\bar{\\rho}\\tilde{\\phi}}{\\partial t}dV+\\underbrace{\\int_{\\partial S}G_k\\tilde{\\phi}n_kdS}{\\text{对流项}}=\\underbrace{\\int{\\partial S}[\\mu_t\\dfrac{A_{li}A_{ki}}{|J|}\\dfrac{\\partial\\tilde{\\phi}}{\\partial \\xi_l}]n_k}_{\\text{扩散项}}$ ","date":"2021-08-22","objectID":"/les/:3:0","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"有限体积离散 令坐标变换后的空间中坐标线性变化，以网格中心点为节点，通过中心差分获得网格边界变量值。 对于不可压缩非定常流动，对流项的动能守恒是必需的。对流项动能守恒是N-S方程的结果，适用于无黏不可压流动。 但是，离散意义上的能量守恒不是动量守恒和质量守恒导致的，即存在不满足质量、动量、能量守恒的离散求解方法。 north等代表网格的北侧面，N代表网格北边相邻网格的中心 可使用对流项的散度形式(先验保守) 上文积分形式守恒方程中对流项可以近似为： $\\int_{\\partial S}G_k\\tilde{\\phi}n_kdS\\approx G_1\\tilde{u}|{north}-G_1\\tilde{u}|{south}+G_2\\tilde{u}|{east}-G_2\\tilde{u}|{west}+G_3\\tilde{u}|{right}-G_3\\tilde{u}|{left}$ 上式中，以 $G_1\\tilde{u}|_{north}$ 为例 $G_1 \\widetilde{u}|_{north}=$ ​ $\\dfrac{\\widetilde{u_{N}}+\\widetilde{u_{P}}}{2}[\\dfrac{A_{11}}{|J|}\\bar{\\rho}\\tilde{u}|{north}+\\dfrac{A{12}}{|J|}\\bar{\\rho}\\tilde{v}|{north}+\\dfrac{A{13}}{|J|}\\bar{\\rho}\\tilde{w}|_{north}]$ 其中，$A_{11}=\\dfrac{\\partial y}{\\partial \\xi_2}\\dfrac{\\partial z}{\\partial \\xi_3}-\\dfrac{\\partial y}{\\partial \\xi_3}\\dfrac{\\partial z}{\\partial \\xi_2}$ 并且，$\\dfrac{\\partial y}{\\partial \\xi_2}|{north}\\approx\\dfrac{y_E+y{NE}-y_W-y_{NW}}{4}$ 以相同形式离散扩散项 上文积分形式守恒方程中扩散项可以近似为： $\\mu_t(\\dfrac{\\partial\\tilde{u}}{\\partial\\xi_1})\\dfrac{A_{11}}{|J|}|{north}\\approx\\dfrac{\\mu{t,P}+\\mu_{t,N}}{2}(\\tilde{u}N-\\tilde{u}P)\\dfrac{A{11}}{|J|}|{north}$ 坐标系变换中非正交性产生的交叉导数项通过显式方法计算，并加入源项。 非线性项在时间上也是滞后的，通过前一时间步的质量守恒方程解计算。 M. Wille. Large Eddy Simulation of a Plane Jet in a Cross Flow. PhD thesis, Imperial College, University of London, London, (UK), 1997. 输运方程中的瞬态项通过三点向后差分格式离散。 考虑到密度的变化，计算过程须使用可变的时间步长。 可以将标量的时间导数写为：$\\bar{\\rho}\\frac{\\partial\\tilde{\\phi}}{\\partial t}$， W. P. Jones. Turbulence modelling and numerical solution methods for variable density and combusting flows. In P. A. Libby and F. A. Williams, editors, Turbulent Reacting Flows, chapter 6, pages 309–374. Academic Press, London, 1987. 因此变化率项近似为： $\\bar{\\rho}\\dfrac{\\partial\\tilde{\\phi}}{\\partial t}\\approx\\rho^*[(R+1)\\dfrac{\\phi^{n+1}-\\phi^n}{\\delta t}-(R)\\dfrac{\\phi^{n}-\\phi^{n-1}}{\\delta t_o}]$ (省略了滤波符号) 其中，$R=\\frac{\\delta t}{\\delta t + \\delta t_o}$ ， $\\delta t$ 为在 $n+1$ 时间阶数的时间步长，$\\delta t_o$ 为在前一时间阶数的时间步长， 采用一阶近似求密度，$\\rho^*=\\frac{\\rho^{n+1}+\\rho^n}{2}$ 。 以上所采用的离散方法产生了对于通用变量 $\\tilde{\\phi}$ 的准线性方程组： $\\tilde{\\phi}_Pa_P=$ $\\sum_{\\substack{S,N,W,E,L,R}} \\tilde{\\phi}{\\alpha} a{\\alpha}+S_P$ 其中 $S_P$ 代表源项，包含所有不能用面通量表示的项，并且依赖于 $\\tilde{\\phi}$ ， $a_{\\alpha}$ 代表对流项和扩散项。 待续：标量守恒方程 ","date":"2021-08-22","objectID":"/les/:4:0","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"SIMPLE 算法 压力耦合方程组的半隐式方法(Semi-ImPlicit Method for Pressure Linked Equations) S. V. Patankar and D. B. Spalding. A calculation procedure for heat, mass and momentum transfer in three dimensional parabolic flows. International Journal of Heat and Mass Transfer, 15:1787–1806, 1971. ","date":"2021-08-22","objectID":"/les/:5:0","tags":["AECSC","LES","boffin"],"title":"大涡模拟","uri":"/les/"},{"categories":["湍流燃烧仿真"],"content":"综述 在大涡模拟（LES）中，二阶矩（Second-order Moment，SOM）模型直接分析滤波后的阿伦尼乌斯形式反应速率表达式，保留其至二阶项而忽略高阶项。 早期的二阶矩模型对化学反应源项的阿伦尼乌斯表达式进行泰勒展开，并假设$\\frac{E}{RT}$为小量且$\\frac{T’}{T}«1$，基于此方法得到的时均反应率$w$为： $$\\bar{w_s}=B{\\rho}^2\\bar{Y_1}\\bar{Y_2}exp(-\\frac{E}{R\\bar{T}})[1+\\frac{\\overline{(Y’_1Y’_2)}}{\\bar{Y_1}\\bar{Y_2}}+\\frac{E}{R\\bar{T}}(\\frac{\\overline{(T’Y’_1)}}{\\bar{T}\\bar{Y_1}}+\\frac{\\overline{(T’Y’_2)}}{\\bar{T}\\bar{Y_2}})+frac{1}{2}(\\frac{E}{R\\bar{T}})^2\\overline{(\\frac{T’}{\\bar{T}})^2}]=B{\\rho}^2\\bar{Y_1}\\bar{Y_2}exp(-\\frac{E}{R\\bar{T}})[1+F]$$ 基于以上两个假设，时均反应速率的封闭问题被转换为温度、浓度之间的二阶矩的封闭问题。可建立这些二阶矩的输运方程并应用梯度模拟使这些方程封闭。因此在SOM模型中需要引入多个二阶标量脉动关联矩的微分方程（称其为二阶矩输运方程）。对于强剪切流动，可忽略二阶标量脉动关联矩输运方程中的对流项和扩散项，并认为化学反应源项对脉动关联矩的影响是次要的，从而得到二阶标量脉动关联矩的代数表达式。 实际情况中$\\frac{E}{RT}$在一些燃烧反应中达到5~10，特别是对于污染物生成相关慢速反应，且可能不满足$\\frac{T’}{T}«1$，因此这种展开方式可能低估时均反应源项的贡献，存在较大误差[1]。为弥补这些不足，周力行[2]考虑湍流脉动对化学反应速率的影响，提出统一二阶矩（Unified Second-order Moment，USM）模型，该模型将指数项纳入反应速率系数项中，并增加了与温度脉动相关的反应速率系数脉动、以及与组分质量分数脉动之间的相关的修正项，并使用对应量的输运方程求解。 [1] Khalil E E. On the prediction of reaction rates in turbulent premixed confined flames[C]. 18th Aerospace Sciences Meeting, 1980. [2] Zhou L X, Qiao L, Zhang J. A unified second-order moment turbulence-chemistry model for simulating turbulent combustion and NOx formation[J]. Fuel, 2002, 81:1703~1709. ","date":"2021-08-21","objectID":"/som/:1:0","tags":["AECSC","LES","boffin"],"title":"二阶矩模型","uri":"/som/"},{"categories":["website"],"content":"$ \\KaTeX $ ","date":"2021-08-21","objectID":"/katex/:0:0","tags":["KaTeX","website","markdown"],"title":"KaTeX","uri":"/katex/"},{"categories":["website"],"content":"矩阵 Code Result \\begin{**matrix**}a\u0026b\\\\\\ c\u0026d\\end{**matrix**} $\\begin{matrix}a\u0026b\\\\ c\u0026d\\end{matrix}$ \\begin{**pmatrix**}a\u0026b\\\\\\ c\u0026d\\end{**pmatrix**} $\\begin{pmatrix}a\u0026b\\\\ c\u0026d\\end{pmatrix}$ \\begin{**bmatrix**}a\u0026b\\\\\\ c\u0026d\\end{**bmatrix**} $\\begin{bmatrix}a\u0026b\\\\ c\u0026d\\end{bmatrix}$ \\begin{**vmatrix**}a\u0026b\\\\\\ c\u0026d\\end{**vmatrix**} $\\begin{vmatrix}a\u0026b\\\\ c\u0026d\\end{vmatrix}$ \\begin{**Vmatrix**}a\u0026b\\\\\\ c\u0026d\\end{**Vmatrix**} $\\begin{Vmatrix}a\u0026b\\\\ c\u0026d\\end{Vmatrix}$ \\begin{**Bmatrix**}a\u0026b\\\\\\\\\\\\ c\u0026d\\end{**Bmatrix**} $\\begin{Bmatrix}a\u0026b\\\\ c\u0026d\\end{Bmatrix}$ **\\binom** {n}{k} $\\binom{n}{k}$ n **\\brace** k ${n\\brace k}$ n **\\brack** k ${n\\brack k}$ ","date":"2021-08-21","objectID":"/katex/:1:0","tags":["KaTeX","website","markdown"],"title":"KaTeX","uri":"/katex/"},{"categories":["website"],"content":"标记 Code Result Code Result a' $a'$ a'' $a’'$ \\dot{a} $\\dot{a}$ \\ddot{a} $\\ddot{a}$ \\hat{a} $\\hat{a}$ \\check{a} $\\check{a}$ \\bar{a} $\\bar{a}$ \\tilde{a} $\\tilde{a}$ \\widehat{ab} $\\widehat{ab}$ \\widecheck{ab} $\\widecheck{ab}$ \\overline{ab} $\\overline{ab}$ \\widetilde{ab} $\\widetilde{ab}$ \\vec{a} $\\vec{a}$ \\overrightarrow{ab} $\\overrightarrow{ab}$ \\underline{ab} $\\underline{ab}$ \\utide{ab} $\\utilde{ab}$ \\overgroup{ab} $\\overgroup{ab}$ \\overbrace{ab} $\\overbrace{ab}$ \\overleftrightarrow{ab} $\\overleftrightarrow{ab}$ \\overlinesegment{ab} $\\overlinesegment{ab}$ ","date":"2021-08-21","objectID":"/katex/:2:0","tags":["KaTeX","website","markdown"],"title":"KaTeX","uri":"/katex/"},{"categories":["website"],"content":"字符 Result Code Result Code Result Code Result Code $\\alpha$ \\alpha $\\beta$ \\beta $\\gamma$ \\gamma $\\delta$ \\delta $\\epsilon$ \\epsilon $\\zeta$ \\zeta $\\eta$ \\eta $\\theta$ \\theta $\\iota$ \\iota $\\kappa$ \\kappa $\\lambda$ \\lambda $\\mu$ \\mu $\\nu$ \\nu $\\xi$ \\xi $\\omicron$ \\omicron $\\pi$ \\pi $\\rho$ \\rho $\\sigma$ \\sigma $\\tau$ \\tau $\\upsilon$ \\upsilon $\\phi$ \\phi $\\chi$ \\chi $\\psi$ \\psi $\\omega$ \\omega $\\varepsilon$ \\varepsilon $\\varkappa$ \\varkappa $\\vartheta$ \\vartheta $\\varpi$ \\varpi $\\varrho$ \\varrho $\\varsigma$ \\varsigma $\\varphi$ \\varphi $\\digamma$ \\digamma $\\imath$ \\imath $\\jmath$ \\jmath $\\nabla$ \\nabla $\\ell$ \\ell $\\eth$ \\eth $\\partial$ \\partial $\\hbar$ \\hbar $\\hslash$ \\hslash $\\Alpha$ \\Alpha $\\Beta$ \\Beta $\\Gamma$ \\Gamma $\\Delta$ \\Delta $\\Epsilon$ \\Epsilon $\\Zeta$ \\Zeta $\\Eta$ \\Eta $\\Theta$ \\Theta $\\Iota$ \\\\Iota $\\Kappa$ \\Kappa $\\Lambda$ \\Lambda $\\Mu$ \\Mu $\\Nu$ \\Nu $\\xi$ \\Xi $\\Omicron$ \\Omicron $\\Pi$ \\Pi $\\Rho$ \\Rho $\\Sigma$ \\Sigma $\\Tau$ \\Tau $\\Upsilon$ \\Upsilon $\\Phi$ \\\\Phi $\\Chi$ \\Chi $\\Psi$ \\Psi $\\Omega$ \\Omega $\\varGamma$ \\varGamma $\\varDelta$ \\varDelta $\\varTheta$ \\varTheta $\\varLambda$ \\varLambda $\\varXi$ \\varXi $\\varPi$ \\varPi $\\varSigma$ \\varSigma $\\varUpsilon$ \\varUpsilon $\\varPhi$ \\varPhi $\\varPsi$ \\varPsi $\\varOmega$ \\varOmega ∐ \\coprod ∑ \\sum ∏ \\prod ⋁ \\bigvee ∞ \\infty ∫ \\int ∮ \\oint ⋀ \\bigwedge ✓ \\checkmark ∬ \\iint ∬ \\oiint ⋂ \\bigcap $\\angle$ \\angle ∭ \\iiint $\\oiiint$ \\oiiint ⋃ \\bigcup § \\text{\\sect} 字母集\r∀∴∁∵∃∣∈∈/∋⊂⊃∧∨↦→←↔¬ ℂ ℍ ℕ ℙ ℚ ℝ ABΓΔEZHΘIKΛMNΞOΠPΣTΥΦXΨΩ α β γ δ ϵ ζ η θ ι κ λ μ ν ξ o π ρ σ τ υ ϕ χ ψ ω ε ϑ ϖ ϱ ς φ ϝ αβγδϵζηθικλμνξoπρστυϕχψωεϑϖϱςφϝ ∂∇ℑℲℵℶℷℸ⅁ℏð ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖÙÚÛÜÝ Þßàáâãäåçèéêëìíîïðñòóôöùúûüýþÿ ∫∬∭∮∏∐∑⋀⋁⋂⋃⨀⨁⨂⨄⨆ ∯ ∰ 符号集\r+−/∗⋅±×÷∓∔∧∨∩∪≀⊎⊓⊔⊕⊖⊗⊘⊙⊚⊛⊝◯ ∫ ∬ ∭ ∮ ∏ ∐ ∑ ⋀ ⋁ ⋂ ⋃ ⨀ ⨁ ⨂ ⨄ ⨆ ∫∬∭∮∏∐∑⋀⋁⋂⋃⨀⨁⨂⨄⨆ ∯ ∰ ←↑→↓↔↕↖↗↘↙↚↛↞↠↢↣↦↩↪ ↫↬↭↮↰↱↶↷↺↻↼↽↾↾↿⇀⇁⇂⇃⇄⇆⇇⇈⇉⇊ ⇋⇌⇍⇎⇏⇐⇑⇒⇓⇔⇕⇚⇛⇝⇠⇢⟵⟶⟷⟸⟹⟺⟼ ↽ § ¶ £ ¥ ∇ ∞ · ∠ ∡ ∢ ♠ ♡ ♢ ♣ ♭ ♮ ♯ ✓ … ⋮ ⋯ ⋱ ! ‼ ⦵ ","date":"2021-08-21","objectID":"/katex/:3:0","tags":["KaTeX","website","markdown"],"title":"KaTeX","uri":"/katex/"},{"categories":["website"],"content":"函数 Result Code Result Code $\\frac{a}{b}$ \\frac{a}{b} $\\cfrac{a}{b}$ \\cfrac{a}{b} $\\dfrac{a}{b}$ \\dfrac{a}{b} ${a \\above{2pt} b+1}$ {a \\above{2pt} b+1} $\\sqrt{a}$ \\sqrt{a} $\\sqrt[n]{a}$ \\sqrt[n]{a} $\\textstyle\\sum_{i=1}^n$ \\textstyle\\sum_{i=1}^n $\\displaystyle\\sum_{i=1}^n$ \\displaystyle\\sum_{i=1}^n $\\lim\\limits_x$ \\lim\\limits_x $\\lim\\nolimits_x$ \\lim\\nolimits_x 大括号 \\begin{cases} a \u0026\\text{if b}\\\\\\ c \u0026\\text{else} \\end{cases} $\\begin{cases} a \u0026\\text{if b}\\\\ c \u0026\\text{else} \\end{cases}$ 大括号注释 \\underbrace{a+b+c}_{\\text{note}} $\\underbrace{a+b+c}_{\\text{note}}$ ","date":"2021-08-21","objectID":"/katex/:4:0","tags":["KaTeX","website","markdown"],"title":"KaTeX","uri":"/katex/"},{"categories":["website"],"content":"其他 $\\KaTeX$ supported $\\TeX$ ","date":"2021-08-21","objectID":"/katex/:5:0","tags":["KaTeX","website","markdown"],"title":"KaTeX","uri":"/katex/"},{"categories":["湍流燃烧仿真"],"content":"浸没边界方法 ","date":"2021-08-21","objectID":"/ibm_method/:0:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"用途 模拟存在复杂结构的流场 模拟动边界问题 ","date":"2021-08-21","objectID":"/ibm_method/:1:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"Peskin 直接力法-柔性边界 浸没边界方法最早由Peskin提出，将复杂结构的边界模化为N-S方程中的一种彻体力，用笛卡尔网格解决网格生成困难问题并提高计算效率。 Peskin C S. Flow patterns around heart valves: a numerical method[J]. J Comput Phys, 1972.10(2)：252－271． N-S方程: $\\dfrac{\\partial (\\rho u_i)}{\\partial t}+\\nabla\\cdot(\\rho u_i\\vec{u})=\\nabla\\cdot(\\mu\\nabla\\vec{u})+(-\\dfrac{\\partial p}{\\partial x_i}+S_{u_i})$ 令 $F=S_{u_i}$ ，代表单位体积收受到的彻体力。 Peskin等将浸没边界方法（直接力）应用于柔性边界问题 Roma A M, Peskin C S, Berger M J. An Adaptive Version of the Immersed Boundary Method[J]. J Comput Phys, 1999, 153(2): 509-534. Lai M, Peskin C S. An Immersed Boundary Method with Formal Second-Order Accuracy and Reduced Numerical Viscosity. J Comput Phys, 2000, 160(2): 705-719. Zhu L, Peskin C S. Simulation of a Flapping Flexible Filament in a Flowing Soap Film by the Immersed Boundary Method. J Comput Phys, 2002, 179(2): 452-468. ","date":"2021-08-21","objectID":"/ibm_method/:2:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"Goldstein 直接力法+虚拟边界法-刚体边界 Goldstein D, Handler R, Sirovich L. Modeling a No-Slip Flow Boundary with an External Force Field. Journal of Computational Physics, 1993, 105(2): 354-366. Goldstein D, Handler R, Sirovich L. Direct Numerical Simulation of Turbulent Flow Over a Modeled Riblet Covered Surface, 1993, 105(2): 354-366. ","date":"2021-08-21","objectID":"/ibm_method/:3:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"Yusof 离散力法-可压缩流动 将体积力源项加入离散方程中。 将“直接力”方法中的浸没边界源项转换为物面边界条件局部重构。 Yusof J M, Combined Immersed Boundaries/B-Spines Methods for Simulations of Flows in Complex Geometries. CTR Annual Research Briefs, NASA Ames/Stanford University, 1997. ","date":"2021-08-21","objectID":"/ibm_method/:4:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"离散边界和流体的链接 用函数 $D_{ij}(\\vec{x_k}),\\vec{x_k}\\in Boundary$ 链接边界和流体的两种方式： 通过评估浸没边界给定点的速度场 通过将边界力分散到附近的流体域网格点上 自适应浸没边界法\rRoma等[Roma A M, Peskth C S, Berger M J. An adaptive version of the immersed boundary method[J]. J Comput Phys, 2000, 153:509-534.]采用自适应浸没边界法，对浸没边界附近的网格进行加密，加密区由逐级嵌套的加密层构成，每层包含一组互不交叠的矩阵网格区。 在数值求解时使用 Crank-Nicholson 法，即在混合 MAC 网格上应用 二阶投影法求解 N-S 方程。 在每一层的计算中则采用 Gauss-Seidel 法在混合 MAC 网格上求解，而每一层之间的数值传递则采用多层多网格法[Mthion M L. Two methods for the study of vortex patch evolution on locally refined grids[D]:Ph.D.thesis.Lawrence Berkeley Labo,ratury-University of California,Berkeley,1994][Roma A M. A multilevel self-adaptive version of the immersed boundary method[D]:Ph.D thesis.Courant Institute of Mathematical Science-New York University, 1996.]。 自适应性浸入边界法缺点在于很难获得非线性对流项的高阶离散，因此不适合模拟高雷诺数运动。 虚拟网格有限差分法\r为模拟高雷诺数运动，虚拟网格有限差分法（Ghost-cell FDM）法将虚拟网格定义在浸没边界内部，保证每个虚拟网格至少与流场中的一个网格点相邻，流场计算在遇到虚拟网格就会停止，不需要计算浸入边界内部的网格点，虚拟网格上的各种变量值由周围流体网格点插值得到[Majumdar S, laccarino G, Durbin P A. RANS solver with adaptive structured boundary non-conforming grids[C]. Annu Res Briefs, 2001, 353－366.]。 切割网格法\r同样是为模拟高雷诺数运动，切割网格法则首先切割浸入边界所在的网格：如果初始网格的中心是流体，则切割后的网格成为一个 新的独立网格；如果不是，则与相邻网格合并。（目的是为了防止生成细微网格导致结果出错）。然后，插值计算每个网格面的质流量、对流项、耗散项和压力梯度。Ye T, Mittal R, Udatjynar H S, Shyy W. An accurate Cartesian grid method for viscous incompressible flows with complex boundaries[J]. Journal of Computational Physics, 1999, 156: 209-240. 切割网格法不需要求解浸入边界内部网格点，又同时保证了边界附近解的精度，目前己成功地应用于二维复杂流动，但对于三维问题模拟尚存在一定的困难，主要是因为切割会产生复杂的网格使流场控制方程的离散变得困难。 ","date":"2021-08-21","objectID":"/ibm_method/:5:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"GCIBM Ghost-Cell Immersed Boundary Method 通过Ghost-Cell方法设置边界条件，在采用浸没边界法计算时保持基础求解器的二阶精度。 Yu-Heng Tseng, Joel H. Ferzige. A ghost-cell immersed boundary method for flow in complex geometry[J]. Journal of Computational Physics, 2003, 192: 593-623. ","date":"2021-08-21","objectID":"/ibm_method/:6:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"AECSC-IBM ","date":"2021-08-21","objectID":"/ibm_method/:7:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"边界 I=1, South边界标记IBS 类型 系数阵COEF -1 INFLOW $源项COEF(BPC) += COEF(South)\\cdot 进口条件; COEF(South)=0;$ -2 OUTFLOW（零梯度） $对角阵PC -= COEF(South); COEF(South)=0;$ -3 对称 — -4 DIRICHLET（固定壁温） — -5 NUMANN（零梯度） — 壁面边界（IBS = -4，-5） geom: 根据几何设置$w_1, w_2, w_3$ i $w_1$ 1 1.0 lp1 0.0 $\\dfrac{\\partial u}{\\partial i}=w_1(u_P-u_{South})+(1-w_1)(u_{North}-u_P)$ boundary2: 计算法向速度VN 计算反弹速度VREF 根据壁面速度分布得到: $GAMS=VISC$或$\\dfrac{\\tau\\cdot DL}{VREF}$ $TIP = \\dfrac{GAMS\\cdot DA}{|AJC|\\cdot DL}$ 速度系数阵设置 (NV = NVU，NVV，NVW) NVU: $对角项PC+=TIP\\cdot (1-Norm_x^2)$ $COEF(South)+=TIP\\cdot (1-Norm_x^2)$ $COEF(BPC) += TIP\\cdot Norm_x\\cdot (Norm_y\\cdot \\dfrac{\\partial v}{\\partial i}+Norm_z\\cdot \\dfrac{\\partial w}{\\partial i})$ 标量系数阵设置 (NUMANN) $对角项COEF(PC)-=COEF(South)$ $COEF(South)=0$ boundary3: 边界速度, 焓值重设为初始 $F(IJKS)=FSTH(NV,IJK)$ 标量零梯度(NEUMANN) $f(ijks)=f(ijkp)$ ","date":"2021-08-21","objectID":"/ibm_method/:7:1","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["湍流燃烧仿真"],"content":"AECSC-IBM.dev $a_p\\phi_p = \\sum a_{nb_2}\\phi_{nb_2}+K_{vol}b$ $a_p\\phi_p = a_{N_2}\\phi_{N_2}+a_{S_2}\\phi_{S_2}+a_{W_2}\\phi_{W_2}+a_{E_2}\\phi_{E_2}+a_{L_2}\\phi_{L_2}+a_{R_2}\\phi_{R_2}+K_{vol}b$ $a_{nb_2}\\phi_{nb_2}$ 由 $a_{nb_1}\\phi_{nb_1}$ 插值求出 $K_{vol}$ 只与控制体变换前后体积有关 单位：m/s Unit: m/s 温度云图 ","date":"2021-08-21","objectID":"/ibm_method/:8:0","tags":["AECSC","ImmersedBoundaryMethod"],"title":"浸没边界方法","uri":"/ibm_method/"},{"categories":["website"],"content":"从markdown到html","date":"2021-08-19","objectID":"/markdownnotes/","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"基于markdown的网页构建 ","date":"2021-08-19","objectID":"/markdownnotes/:0:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"前缀模板 --- title: \"TITLE\" date: 2021-08-19T00:00:00+08:00 draft: true authorLink: \"\" description: \"\" images: [] tags: [] categories: [] hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true --- ","date":"2021-08-19","objectID":"/markdownnotes/:1:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"图像 ","date":"2021-08-19","objectID":"/markdownnotes/:2:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"图片 OR 动图 markdown 格式插入 ![figureName](../images/example.png) html 格式插入 \u003cdiv style=\"align: center\"\u003e \u003cimg src=\"../images/example.png\" alt=\"FIGURE\" width=\"300\" height=\"300\" \u003e \u003c/div\u003e figure ShortCode {{\u003c figure src=\"../images/example.png\" title=\"Example (figure)\" \u003e}} \u003cfigure\u003e \u003cimg src=\"../images/example.png\"/\u003e \u003cfigcaption\u003e \u003ch4\u003eExample (figure)\u003c/h4\u003e \u003c/figcaption\u003e \u003c/figure\u003e image ShortCode {{\u003c image src=\"../images/example.png\" caption=\"Example (`image`)\" src_s=\"\" src_l=\"\" \u003e}} ","date":"2021-08-19","objectID":"/markdownnotes/:2:1","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"视频 \u003c!-- mp4格式 --\u003e \u003cvideo id=\"video\" controls=\"\" preload=\"none\" poster=\"封面\"\u003e \u003csource id=\"mp4\" src=\"mp4格式视频\" type=\"video/mp4\"\u003e \u003c/videos\u003e \u003c!-- webm格式 --\u003e \u003cvideo id=\"video\" controls=\"\" preload=\"none\" poster=\"封面\"\u003e \u003csource id=\"webm\" src=\"webm格式视频\" type=\"video/webm\"\u003e \u003c/videos\u003e \u003c!-- ovg格式 --\u003e \u003cvideo id=\"video\" controls=\"\" preload=\"none\" poster=\"封面\"\u003e \u003csource id=\"ogv\" src=\"ogv格式视频\" type=\"video/ogv\"\u003e \u003c/videos\u003e ","date":"2021-08-19","objectID":"/markdownnotes/:2:2","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"特殊格式文本 style ShortCode {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} This is a right-aligned paragraph. admonition ShortCode {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} This is a tip\r一个 技巧 横幅\rtype 类型 note (default) 注意 quote 引用 example 示例 info 信息 bug bug tip 技巧 question 问题 abstract 摘要 danger 危险 success 成功 warning 警告 failure 失败 ","date":"2021-08-19","objectID":"/markdownnotes/:3:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"绘图 ","date":"2021-08-19","objectID":"/markdownnotes/:4:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"mermaid 流程图 {{\u003c mermaid \u003e}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} 效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:4:1","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"mermaid 时序图 {{\u003c mermaid \u003e}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} 效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:4:2","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"mermaid GANTT图 {{\u003c mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u003c /mermaid \u003e}} 效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:4:3","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"mermaid 类图 {{\u003c mermaid \u003e}} classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label {{\u003c /mermaid \u003e}} 效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:4:4","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"mermaid 状态图 {{\u003c mermaid \u003e}} stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] {{\u003c /mermaid \u003e}} 效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:4:5","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"mermaid Git图 {{\u003c mermaid \u003e}} gitGraph: options { \"nodeSpacing\": 100, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u003c /mermaid \u003e}} 效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:4:6","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"mermaid 饼图 {{\u003c mermaid \u003e}} pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:4:7","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"echarts 折线图 以JSON格式为例 {{\u003c echarts \u003e}} { \"title\": { \"text\": \"折线统计图\", \"top\": \"2%\", \"left\": \"center\" }, \"tooltip\": { \"trigger\": \"axis\" }, \"legend\": { \"data\": [\"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\"], \"top\": \"10%\" }, \"grid\": { \"left\": \"5%\", \"right\": \"5%\", \"bottom\": \"5%\", \"top\": \"20%\", \"containLabel\": true }, \"toolbox\": { \"feature\": { \"saveAsImage\": { \"title\": \"保存为图片\" } } }, \"xAxis\": { \"type\": \"category\", \"boundaryGap\": false, \"data\": [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"] }, \"yAxis\": { \"type\": \"value\" }, \"series\": [ { \"name\": \"邮件营销\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [120, 132, 101, 134, 90, 230, 210] }, { \"name\": \"联盟广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [220, 182, 191, 234, 290, 330, 310] }, { \"name\": \"视频广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [150, 232, 201, 154, 190, 330, 410] }, { \"name\": \"直接访问\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [320, 332, 301, 334, 390, 330, 320] }, { \"name\": \"搜索引擎\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u003c /echarts \u003e}} 效果如下： ","date":"2021-08-19","objectID":"/markdownnotes/:4:8","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"地图 {{\u003c mapbox 40.09 116.15 10 true \"mapbox://styles/mapbox/streets-zh-v1\" \u003e}} 或 {{\u003c mapbox lng=40.09 lat=116.15 zoom=10 marked=true light-style=\"mapbox://styles/mapbox/streets-zh-v1\" \u003e}} ","date":"2021-08-19","objectID":"/markdownnotes/:5:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"音乐 ","date":"2021-08-19","objectID":"/markdownnotes/:6:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"本地 {{\u003c music url=\"/music/example.mp3\" name=Example artist=Example cover=\"/images/example.jpg\" \u003e}} ","date":"2021-08-19","objectID":"/markdownnotes/:6:1","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"自动识别 auto [必需]] (第一个位置参数) 支持 netease, tencent, xiami 平台. {{\u003c music auto=\"http://music.163.com/song?id=505651753\" \u003e}} 或者 {{\u003c music \"http://music.163.com/song?id=505651753\" \u003e}} 效果如下: 单曲 歌单 其他参数\rtheme [可选] 音乐播放器的主题色, 默认值是 #448aff. fixed [可选] 是否开启固定模式, 默认值是 false. mini [可选] 是否开启迷你模式, 默认值是 false. autoplay [可选] 是否自动播放音乐, 默认值是 false. volume [可选] 默认音量, 会被保存在浏览器缓存中, 默认值是 0.7. mutex [可选] 是否自动暂停其它播放器, 默认值是 true. loop [可选] [仅限歌单] [all, one, none] 音乐列表的循环模式, 默认值是 none. order [可选] [仅限歌单] [list, random] 音乐列表的播放顺序, 默认值是 list. list-folded [可选] [仅限歌单] 初次打开的时候音乐列表是否折叠, 默认值是 false. list-max-height [可选] [仅限歌单] 音乐列表的最大高度, 默认值是 340px. ","date":"2021-08-19","objectID":"/markdownnotes/:6:2","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"自定义 server [必需] (第一个位置参数-音乐平台) [netease, tencent, kugou, xiami, baidu] 音乐平台. type [必需] (第二个位置参数-音乐类型) [song, playlist, album, search, artist] 音乐类型. id [必需] (第三个歌曲 ID, 或者播放列表 ID, 或者专辑 ID, 或者搜索关键词, 或者创作者 ID) {{\u003c music server=\"netease\" type=\"song\" id=\"505651753\" \u003e}} 或者 {{\u003c music netease song 505651753 \u003e}} ","date":"2021-08-19","objectID":"/markdownnotes/:6:3","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["website"],"content":"bilibili shortcode 视频的响应式播放器. 如果视频只有一个部分, 则仅需要视频的 BV id, 例如: https://www.bilibili.com/video/BV1Sx411T7QQ 一个 bilibili 示例: {{\u003c bilibili BV18b411u7sq \u003e}} 或者 {{\u003c bilibili BV18b411u7sq \u003e}} 呈现的输出效果如下: 如果视频包含多个部分, 则除了视频的 BV id 之外, 还需要 p, 默认值为 1, 例如: https://www.bilibili.com/video/BV1TJ411C7An?p=3 一个带有 p 参数的 bilibili 示例: {{\u003c bilibili BV1TJ411C7An 3 \u003e}} 或者 {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} 效果如下: ","date":"2021-08-19","objectID":"/markdownnotes/:7:0","tags":["markdown","website"],"title":"markdown","uri":"/markdownnotes/"},{"categories":["vim"],"content":"基于vim-plug","date":"2021-08-19","objectID":"/vimset/","tags":["vim","linux"],"title":"VIM快速配置","uri":"/vimset/"},{"categories":["vim"],"content":"VIM 编辑器快速配置 ","date":"2021-08-19","objectID":"/vimset/:0:0","tags":["vim","linux"],"title":"VIM快速配置","uri":"/vimset/"},{"categories":["vim"],"content":"基础插件 安装ctags, vim-scripts, vim-addon-manager, taglist, winmanager, 以Debian类系统为例. sudo apt-get install vim sudo apt-get install ctags sudo apt-get install vim-scripts sudo apt-get install vim-addon-manager vim-addons install taglist vim-addons install winmanager 若后续安装coc.nvim作为智能补全插件，还需安装nodejs, yarn, clangd. sudo apt-get install nodejs yarn clangd ","date":"2021-08-19","objectID":"/vimset/:1:0","tags":["vim","linux"],"title":"VIM快速配置","uri":"/vimset/"},{"categories":["vim"],"content":"安装 VIM-Plug 使用VIM-Plug作为插件管理器，安装命令如下. curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim VIM-Plug插件管理基本命令： 首先, 打开vim, 在vim命令模式中 PlugStatus #插件状态 PlugInstall #安装.vimrc文件中Plug命令声明的插件 PlugUpdate #安装或更新插件 PlugClean #删除.vimrc文件中无声明的插件 PlugDiff #检查上次更新的更改和挂起的更改 PlugSnapshot #生成用于快速恢复插件当前状态的脚本(备份) ","date":"2021-08-19","objectID":"/vimset/:2:0","tags":["vim","linux"],"title":"VIM快速配置","uri":"/vimset/"},{"categories":["vim"],"content":"编辑 “~/.vimrc” 文件 参考配置如下. \"vim-plug ################################## call plug#begin('~/.vim/plugged') Plug 'itchyny/lightline.vim' Plug 'neoclide/coc.nvim',{'branch':'release'} Plug 'preservim/nerdtree' Plug 'Xuyuanp/nerdtree-git-plugin' Plug 'Yggdroot/LeaderF', { 'do': './install.sh' } Plug 'jiangmiao/auto-pairs' Plug 'crusoexia/vim-monokai' Plug 'luochen1990/rainbow' Plug 'vim-airline/vim-airline' Plug 'vim-airline/vim-airline-themes' call plug#end() \"Coc.nvim ################################## \"nodejs yarn clangd is needed for coc.nvim \" use \u003cCR\u003e to confirm completion and format inoremap \u003csilent\u003e\u003cexpr\u003e \u003ccr\u003e pumvisible() ? coc#_select_confirm() : \"\\\u003cC-g\u003eu\\\u003cCR\u003e\\\u003cc-r\u003e=coc#on_enter()\\\u003cCR\u003e\" \" use \u003ctab\u003e for trigger completion and navigate to the next complete item function! s:check_back_space() abort let col = col('.') - 1 return !col || getline('.')[col - 1] =~ '\\s' endfunction inoremap \u003csilent\u003e\u003cexpr\u003e \u003cTab\u003e \\ pumvisible() ? \"\\\u003cC-n\u003e\" : \\ \u003cSID\u003echeck_back_space() ? \"\\\u003cTab\u003e\" : \\ coc#refresh() \"nerdtree ################################### map \u003cC-n\u003e :NERDTreeToggle\u003cCR\u003e let NERDTreeShowBookmarks=1 autocmd vimenter * if !argc()|NERDTree|endif autocmd bufenter * if (winnr(\"$\") == 1 \u0026\u0026 exists(\"b:NERDTree\") \u0026\u0026 b:NERDTree.isTabTree()) | q | endif let g:NERDTreeDirArrowExpandable = '+' let g:NERDTreeDirArrowCollapsible = '-' let g:NERDTreeShowLineNumbers=0 let g:NERDTreeHidden=1 let NERDTreeMinimalUI = 1 let NERDTreeDirArrows = 1 \"LeaderF ################################# cnoreabbrev fline LeaderfLine cnoreabbrev ffunc LeaderfFunctioN \"auto-pairs ################################## au Filetype FILETYPE let b:AutoPairs = {\"(\": \")\"} au FileType php let b:AutoPairs = AutoPairsDefine({'\u003c?' : '?\u003e', '\u003c?php': '?\u003e'}) \"vim-monokai ################################## colo monokai \"rainbow ################################## let g:rainbow_active = 1 let g:rainbow_conf = { \\ 'guifgs': ['darkorange3', 'seagreen3', 'royalblue3', 'firebrick'], \\ 'ctermfgs': ['lightyellow', 'lightcyan','lightblue', 'lightmagenta'], \\ 'operators': '_,_', \\ 'parentheses': ['start=/(/ end=/)/ fold', 'start=/\\[/ end=/\\]/ fold', 'start=/{/ end=/}/ fold'], \\ 'separately': { \\ '*': {}, \\ 'tex': { \\ 'parentheses': ['start=/(/ end=/)/', 'start=/\\[/ end=/\\]/'], \\ }, \\ 'lisp': { \\ 'guifgs': ['darkorange3', 'seagreen3', 'royalblue3', 'firebrick'], \\ }, \\ 'vim': { \\ 'parentheses': ['start=/(/ end=/)/', 'start=/\\[/ end=/\\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\\[/ end=/\\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'], \\ }, \\ 'html': { \\ 'parentheses': ['start=/\\v\\\u003c((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ \u003e ])@!\\z([-_:a-zA-Z0-9]+)(\\s+[-_:a-zA-Z0-9]+(\\=(\"[^\"]*\"|'.\"'\".'[^'.\"'\".']*'.\"'\".'|[^ '.\"'\".'\"\u003e\u003c=`]*))?)*\\\u003e/ end=#\u003c/\\z1\u003e# fold'], \\ }, \\ 'css': 0, \\ } \\} \"vim-airline ################################# let g:airline_powerline_fonts = 1 let g:airline#extensions#whitespace#enabled = 0 let g:airline#extensions#whitespace#symbol = '!' \" \"VIM SETTINGS ################################# set helplang=cn set langmenu=zh_CN.UTF-8 set encoding=utf8 set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936 set syntax=on set nocompatible set confirm set autoindent set cindent set tabstop=4 set autoread set number set nobackup set noswapfile set ignorecase set hlsearch filetype on filetype plugin on filetype indent on set iskeyword+=_,$,@,%,- set wildmenu set incsearch set mouse=a set selection=exclusive set report=0 set smartindent set statusline=%r%h%w\\ [POS=%l,%v][%p%%]\\ %{strftime(\\\"%d/%m/%y\\ -\\ %H:%M\\\")} set laststatus=2 autocmd InsertLeave * se nocul autocmd InsertEnter * se cul \"ctags ################################# set tags=/home/ubuntu/fileserver/aecsc2/SRC/tags let Tlist_Sort_Type = \"name\" let Tlist_Compart_Format = 1 let Tlist_Exist_OnlyWindow = 1 let Tlist_Ctags_Cmd = '/usr/bin/ctags' let Tlist_Show_One_File = 0 let Tlist_Exit_OnlyWindow = 1 let Tlist_Use_Right_Window ","date":"2021-08-19","objectID":"/vimset/:3:0","tags":["vim","linux"],"title":"VIM快速配置","uri":"/vimset/"}]